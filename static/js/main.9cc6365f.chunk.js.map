{"version":3,"sources":["../node_modules/jspdf/dist sync","utils/firebase.js","utils/Auth.js","utils/PrivateRoute.js","Components/Component/MaterialTable.js","Components/Template.js","Components/auth/Tables.js","Components/auth/AdminTable.js","Components/auth/MainAdminTable.js","Components/auth/Home.js","Components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","window","location","search","MTable","props","title","columns","data","cellEditable","onCellEditApproved","newValue","oldValue","rowData","columnDef","Promise","reject","key","Object","values","indexOf","save_role","setTimeout","queryString","require","App","state","main_title","questions","users","users_data","users_row","ready","downloadData","url","urlString","parse","decode","console","log","fetch","then","response","json","setState","firestore","collection","get","docs","forEach","doc","push","rootRef","where","querySnapshot","snap","index","row","element","answers","question","ind","type","len","subquestion","length","i","arr","tmpCols","this","el","q","editable","cols","map","col","field","className","onClick","Component","tablets","users_by_column","path","label","Template","lookup","ok","style","color","ok_no_data","notice","warning","lookupName","lookupEmail","database","ref","child","on","val","d","name","email","flatData","tests","newData","lk","status","description","Tooltip","arrow","customFilterAndSearch","term","maxWidth","options","filtering","padding","fields","mainAdminTable","onSnapshot","dataKeys","dataRows","columnsName","newRole","update","Home","setForms","setHome","signOut","exact","Tablets","AdminTable","MainAdminTable","withRouter","history","Login","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"mGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,6NCIzBC,IAASC,cAVc,CACvBC,OAAQ,0CACJC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGnB,IAAMC,EAAW,IAAIV,IAASW,KAAKC,mBACtBC,EAAmB,WAC/Bb,IAASW,OAAOG,gBAAgBJ,IAElBV,IAAf,ECdae,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACNC,mBAAS,MADH,mBACrCC,EADqC,KACxBC,EADwB,OAEdF,oBAAS,GAFK,mBAErCG,EAFqC,KAE5BC,EAF4B,KAW5C,OAPAC,qBAAU,WACRC,EAAIf,OAAOgB,oBAAmB,SAACC,GAC7BN,EAAeM,GACfJ,GAAW,QAEZ,IAEAD,EACM,kDAIP,kBAACR,EAAYc,SAAb,CACEC,MAAO,CACLT,gBAGDF,I,SCLQY,EAjBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,6BACxDb,EAAec,qBAAWpB,GAA1BM,YACP,OACE,kBAAC,IAAD,iBACMa,EADN,CAEEE,OAAQ,SAAAC,GAAU,OACdhB,EACA,kBAACW,EAAmBK,GAEpB,kBAAC,IAAD,CAAUC,GAAI,sCAAwCC,OAAOC,SAASC,c,oCCVjE,SAASC,EAAOC,GAG9B,OAAQ,kBAAC,IAAD,CACPC,MAAOD,EAAMC,MACbC,QAASF,EAAME,QACfC,KAAMH,EAAMG,KACZC,aAAc,CACbC,mBAAoB,SAACC,EAAUC,EAAUC,EAASC,GACjD,OAAO,IAAIC,SAAQ,SAACzD,EAAS0D,GAE5B,IAAMC,EAAMC,OAAO7D,KAAKwD,GAASK,OAAOC,OAAON,GAASO,QAAQR,IAEhEP,EAAMgB,UAAUR,EAAQpD,GAAIwD,EAAKN,GACjCW,WAAWhE,EAAS,UCbzB,IAAMiE,EAAcC,EAAQ,KAqIbC,E,4MAlIdC,MAAQ,CACPC,WAAY,GACZC,UAAW,GACXrB,QAAS,GACTsB,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,OAAO,G,EAGRC,aAAe,SAACC,GACf,IAAIC,EAAYZ,EAAYa,MAAMnC,OAAOC,SAASC,OAAQ,CAACkC,QAAQ,IACnEC,QAAQC,IAAIJ,GAEXK,MAAMN,GACJO,MAAK,SAACC,GAEN,OADAJ,QAAQC,IAAI,WAAYG,GACjBA,EAASC,UAEhBF,MAAK,SAACjC,GACN8B,QAAQC,IAAI,OAAQ/B,GACpB,EAAKoC,SAAS,CACbhB,UAAWpB,EAAKoB,UAChBD,WAAYnB,EAAKmB,aAElB,EAAKpB,UACU7C,EAASmF,YAAYC,WAAW,SACtCC,MAAMN,MAAK,SAAAO,GACnBA,EAAKC,SAAQ,SAAAC,GAAG,OAAI,EAAKxB,MAAMG,MAAMsB,KAAKD,EAAIzF,UAC5CgF,MAAK,WACP,IAAIW,EAAU1F,EAASmF,YAAYC,WAAW,aAC9C,EAAKpB,MAAMG,MAAMoB,SAAQ,SAAA3D,GACV8D,EAAQF,IAAI5D,GACDwD,WAAW,WACzBO,MAAM,YAAa,KAAM,EAAK3B,MAAMC,YAAYoB,MAAMN,MAAK,SAAAa,GACrEA,EAAcL,SAAQ,SAACM,EAAMC,GAC5B,IAAIC,EAAM,GACNC,EAAUH,EAAK/C,OACnB,GAAIkD,EAAS,CACZ,IAAIrG,EAAO6D,OAAO7D,KAAK,EAAKqE,MAAMnB,SAE9BoD,EAAU,GAGd,EAAKjC,MAAME,UAAUqB,SAAQ,SAACW,EAAUC,GAMvC,GALIH,EAAQC,QAAQE,KAEnBvB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAImB,EAAQC,QAAQE,KAEP,eAAlBD,EAASE,KAEZ,IADA,IAAIC,EAAMH,EAASI,YAAYC,OACtBC,EAAI,EAAGA,EAAIH,EAAKG,IACpBR,EAAQC,QAAQE,IAAQH,EAAQC,QAAQE,GAAKK,GAChDP,EAAQR,KAAKO,EAAQC,QAAQE,GAAKK,IAGlCP,EAAQR,KAAK,UAKXO,EAAQC,QAAQE,GACnBF,EAAQR,KAAKO,EAAQC,QAAQE,IAG7BF,EAAQR,KAAK,QAMhBb,QAAQC,IAAIoB,GAEZtG,EAAK4F,SAAQ,SAAAhC,GACR0C,EAAQ1C,GACXwC,EAAIxC,GAAO0C,EAAQ1C,GAGnBwC,EAAIxC,GAAO,OAGb,IAAIkD,EAAG,YAAO,EAAKzC,MAAMK,WACzBoC,EAAIhB,KAAKM,GACT,EAAKb,SAAS,CAACb,UAAWoC,IAC1B7B,QAAQC,IAAI4B,oB,wDAcpB,IAAIC,EAAU,GAEdC,KAAK3C,MAAME,UAAUqB,SAAQ,SAACqB,EAAIJ,GACjB,eAAZI,EAAGR,KACNQ,EAAGN,YAAYf,SAAQ,SAAAe,GAAW,OAAII,EAAQjB,KAAK,CAAC7C,MAAO0D,EAAYO,EAAGC,SAAU,aAGpFJ,EAAQjB,KAAK,CAAC7C,MAAOgE,EAAGhE,MAAOkE,SAAU,aAG3C,IAAIC,EAAOL,EAAQM,KAAI,SAACC,EAAKT,GAAN,OAAe,2BAAOS,GAAP,IAAYC,MAAOV,OACzD5B,QAAQC,IAAIkC,GACZJ,KAAKzB,SAAS,CAACrC,QAASkE,M,0CAIxBJ,KAAKpC,aAAaoC,KAAKhE,MAAM6B,O,+BAKpB,IAAD,OACR,OACC,yBAAK2C,UAAU,OACd,4BAAQC,QAAS,kBAAM,EAAKlC,SAAS,CAACZ,OAAO,MAA7C,aACCqC,KAAK3C,MAAMM,MAAQ,kBAAC,EAAD,CAAezB,QAAS8D,KAAK3C,MAAMnB,QAASD,MAAO+D,KAAK3C,MAAMC,WAAYnB,KAAM6D,KAAK3C,MAAMK,YAAe,U,GA7HhHgD,aCKZxD,EAAcC,EAAQ,KA+DbC,E,4MA5DdC,MAAQ,CACPsD,QAAS,GACTxE,KAAM,GACND,QAAS,GACTsB,MAAO,GACPoD,gBAAiB,I,EAGlBhD,aAAe,WACd,IAAIE,EAAYZ,EAAYa,MAAMnC,OAAOC,SAASC,OAAQ,CAACkC,QAAQ,IACnEC,QAAQC,IAAIJ,GAEXK,MAAM,qGAGJC,MAAK,SAACC,GAEN,OADAJ,QAAQC,IAAI,WAAYG,GACjBA,EAASC,UAEhBF,MAAK,SAACjC,GACN8B,QAAQC,IAAI,OAAQ/B,GACpB,EAAKoC,SAAS,CACboC,QAASxE,Q,kEASb6D,KAAKpC,iB,+BAKL,OACC,yBAAK4C,UAAU,OACd,kBAAC,IAAD,KACER,KAAK3C,MAAMsD,QAAQN,KAAI,SAACJ,EAAIJ,GAC5B,OACC,wBAAIjD,IAAKiD,GACR,kBAAC,IAAD,CAAMlE,GAAI,wCAA0CsE,EAAGY,KAAOjF,OAAOC,SAASC,QAASmE,EAAGa,WAI7F,kBAAC,IAAD,KACEd,KAAK3C,MAAMsD,QAAQN,KAAI,SAACJ,EAAIJ,GAAL,OACvB,kBAAC,IAAD,CAAOjD,IAAKiD,EAAGgB,KAAM,wCAA0CZ,EAAGY,OAChE,kBAAM,kBAACE,EAAD,CAAUlD,IAAKoC,EAAGpC,IAAKiD,MAAOb,EAAGa,qB,GAlD9BJ,a,2BCHdM,EAAS,CACTC,GAAI,kBAAC,IAAD,CAAUC,MAAO,CAAEC,MAAO,aAC9BC,WAAY,kBAAC,IAAD,CAAUF,MAAO,CAAEC,MAAO,UACtCE,OAAQ,kBAAC,IAAD,CAAUH,MAAO,CAAEC,MAAO,aAClCG,QAAS,kBAAC,IAAD,CAAUJ,MAAO,CAAEC,MAAO,UAGnCI,EAAa,GACbC,EAAc,GAwFHpE,E,4MArFbC,MAAQ,CACNlB,KAAM,GACND,QAAS,GACTyB,OAAO,G,kEAGY,IAAD,OACJtE,EAASoI,WAAWC,MAAMC,MAAM,eAAeA,MAAM,SAC3DC,GAAG,SAAS,SAAA1C,GAClB,IAAI/C,EAAOU,OAAOC,OAAOoC,EAAK2C,OAC9B1F,EAAKyC,SAAQ,SAAAkD,GACXP,EAAWO,EAAEC,MAAQD,EAAEC,KACvBP,EAAYM,EAAEE,OAASF,EAAEE,SAE3B,IAAIC,EAAW9F,EAAKkE,KAAI,SAAAjB,GACPvC,OAAO7D,KAAKoG,EAAI8C,OACtBtD,SAAQ,SAAChC,EAAKiD,GACrBT,EAAIxC,GAAOwC,EAAI8C,MAAMtF,MAEGwC,EAArB8C,MALwB,IAKdC,EALc,YAKH/C,EALG,WAO7B,OADAnB,QAAQC,IAAIiE,GACLA,KAKLjG,EADOW,OAAO7D,KAAKiJ,EAAS,IACb5B,KAAI,SAAAzD,GACrB,IAAIwF,EAAKpB,EAOT,MANY,SAARpE,EACFwF,EAAKb,EAEU,UAAR3E,IACPwF,EAAKZ,GAEA,CAACvF,MAAOW,EAAK2D,MAAO3D,EAAKnB,OAAQ,SAAAe,GACtC,OAAIA,EAAQI,GAAKyF,OACX7F,EAAQI,GAAK0F,YACR,kBAACC,EAAA,EAAD,CAAStG,MAAOO,EAAQI,GAAK0F,YAAaE,OAAK,GAAExB,EAAOxE,EAAQI,GAAKyF,SAGrErB,EAAOxE,EAAQI,GAAKyF,QAItB7F,EAAQI,IAGnB6F,sBAAuB,SAACC,EAAMlG,GAC5B,OAAIA,EAAQI,GAAKyF,QACiC,IAAxC7F,EAAQI,GAAKyF,OAAQtF,QAAQ2F,IAGI,IAAjClG,EAAQI,GAAMG,QAAQ2F,IAGlC1B,OAAQoB,MAIV,EAAK7D,SAAS,CAACpC,KAAM8F,IACrB,EAAK1D,SAAS,CAACrC,QAASA,IACxB,EAAKqC,SAAS,CAACZ,OAAO,IACtBM,QAAQC,IAAIhC,GACZ+B,QAAQC,IAAI,EAAKb,MAAMlB,W,+BAMzB,OACE6D,KAAK3C,MAAMM,MAAQ,yBAAKuD,MAAO,CAAEyB,SAAU,SACzC,kBAAC,IAAD,CACEzG,QAAS8D,KAAK3C,MAAMnB,QACpBC,KAAM6D,KAAK3C,MAAMlB,KACjByG,QAAS,CACPC,WAAW,EACXC,QAAS,SAEX7G,MAAM,iBAED,S,GAjFGyE,a,SCfZxD,EAAcC,EAAQ,KA8EbC,E,4MA3EdC,MAAQ,CACPlB,KAAM,GACND,QAAS,I,EAGV0B,aAAe,WACd,IAAIE,EAAYZ,EAAYa,MAAMnC,OAAOC,SAASC,OAAQ,CAACkC,QAAQ,IACnEC,QAAQC,IAAIJ,GAEXK,MAAM,8FAGJC,MAAK,SAACC,GAEN,OADAJ,QAAQC,IAAI,WAAYG,GACjBA,EAASC,UAEhBF,MAAK,SAACjC,GACN8B,QAAQC,IAAI,OAAQ/B,GACpB,EAAKoC,SAAS,CACbrC,QAASC,EAAK4G,OAAOC,qB,kEASL,IAAD,OACnBhD,KAAKpC,eACSvE,EAASmF,YAAYC,WAAW,SAEtCwE,YAAW,SAAA/D,GAClB,IAAI/C,EAAO,GACP+G,EAAW,GACfhE,EAAKP,KAAK0B,KAAI,SAACJ,EAAIJ,GAClB1D,EAAK2C,KAAKmB,EAAG9D,QACb+G,EAASpE,KAAKmB,EAAG7G,OAElB,IAAM+J,EAAW,GAEjBhH,EAAKyC,SAAQ,SAACqB,EAAIJ,GAEjB,IAAIuD,EAAc,GAElBvG,OAAO7D,KAAKiH,GAAIrB,SAAQ,SAAAhC,GACvBwG,EAAYxG,GAAOqD,EAAGrD,MAEvBwG,EAAW,GAASF,EAASrD,GAC7BsD,EAAStD,GAAKuD,KAGf,EAAK7E,SAAS,CAACpC,KAAMgH,S,gCAKb/J,EAAIwD,EAAKyG,GACJhK,EAASmF,YAAYC,WAAW,SAASI,IAAzC,UAAgDzF,IAC5DkK,OADY,eAEX1G,EAAMyG,M,+BAMT,OACC,yBAAK7C,UAAU,OACd,kBAAC,EAAD,CAAetE,QAAS8D,KAAK3C,MAAMnB,QACpBC,KAAM6D,KAAK3C,MAAMlB,KAAMa,UAAWgD,KAAKhD,iB,GAtExC0D,aCKZxD,EAAcC,EAAQ,KAyDboG,EAtDF,WAAO,IAAD,EACQ9I,mBAAS,IADjB,mBACJ+I,GADI,aAEM/I,mBAAS,IAFf,mBAELgJ,GAFK,WAuBlB,OAnBA3I,qBAAU,WACT,IAAIgD,EAAYZ,EAAYa,MAAMnC,OAAOC,SAASC,QAClDmC,QAAQC,IAAIJ,GACZ2F,EAAQ3F,EAAUD,KACdC,EAAUD,IACbM,MAAML,EAAUD,KACdO,MAAK,SAACC,GAEN,OADAJ,QAAQC,IAAI,WAAYG,GACjBA,EAASC,UAEhBF,MAAK,SAACjC,GACN8B,QAAQC,IAAI,OAAQ/B,GACpBqH,EAASrH,MAGX8B,QAAQC,IAAI,4BAEX,IAGF,oCACC,oCACA,4BAAQuC,QAAS,kBAAM1F,EAAIf,OAAO0J,YAAlC,YACA,kBAAC,IAAD,KACC,6BACC,6BACC,4BACC,4BACC,kBAAC,IAAD,CAAM/H,GAAI,wCAA0CC,OAAOC,SAASC,QAApE,mCAED,4BACC,kBAAC,IAAD,CAAMH,GAAI,sCAAwCC,OAAOC,SAASC,QAAlE,wEAED,4BACC,kBAAC,IAAD,CAAMH,GAAI,2CAA6CC,OAAOC,SAASC,QAAvE,kIAKH,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO6H,OAAK,EAAC9C,KAAK,wCAAwCvF,UAAWsI,IACrE,kBAAC,IAAD,CAAOD,OAAK,EAAC9C,KAAK,sCAAsCvF,UAAWuI,IACnE,kBAAC,IAAD,CAAOF,OAAK,EAAC9C,KAAK,2CAA2CvF,UAAWwI,SCrC/DC,eAnBD,SAAC,GAAgB,EAAdC,QAIf,OAFwBxI,qBAAWpB,GAA3BM,YAGC,kBAAC,IAAD,CAAUiB,GAAI,iCAAmCC,OAAOC,SAASC,SAIxE,6BACE,sCAEA,4BAAQ2E,QAASvG,GAAjB,2BCYSkD,E,uKAbb,OACC,kBAAC,EAAD,KACC,yBAAKoD,UAAW,OACf,kBAAC,IAAD,KACC,kBAAC,EAAD,CAAcmD,OAAK,EAAC9C,KAAM,iCAAkCvF,UAAWiI,IACvE,kBAAC,IAAD,CAAOI,OAAK,EAAC9C,KAAM,sCAAuCvF,UAAW2I,W,GAPzDvD,aCFEwD,QACW,cAA7BtI,OAAOC,SAASsI,UAEe,UAA7BvI,OAAOC,SAASsI,UAEhBvI,OAAOC,SAASsI,SAASC,MACvB,2DCZNC,IAAS5I,OACP,kBAAC,IAAM6I,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAc/G,MACrBS,MAAK,SAAAuG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7G,QAAQ6G,MAAMA,EAAMC,c","file":"static/js/main.9cc6365f.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 343;","import firebase from 'firebase';\n\nconst firebaseConfig = {\napiKey: \"AIzaSyCCAhvWFvwuxDUXZ4aV-FhB_Dj-lp_frCw\",\n    authDomain: \"electionsmonitor-5d008.firebaseapp.com\",\n    databaseURL: \"https://electionsmonitor-5d008.firebaseio.com\",\n    projectId: \"electionsmonitor-5d008\",\n    storageBucket: \"electionsmonitor-5d008.appspot.com\",\n    messagingSenderId: \"145410178875\",\n    appId: \"1:145410178875:web:6cf434df68d3c65062811e\",\n    measurementId: \"G-EXC8T9QXES\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n\tfirebase.auth().signInWithPopup(provider);\n};\nexport default firebase;\n","import React, { useEffect, useState } from \"react\";\nimport app from \"./firebase.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/ElectionsMonitoringDashboard/login\" + window.location.search} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React, {useEffect, useState} from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nexport default function MTable(props) {\r\n\r\n\r\n\treturn (<MaterialTable\r\n\t\ttitle={props.title}\r\n\t\tcolumns={props.columns}\r\n\t\tdata={props.data}\r\n\t\tcellEditable={{\r\n\t\t\tonCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\t\t\tconst key = Object.keys(rowData)[Object.values(rowData).indexOf(oldValue)]\r\n\r\n\t\t\t\t\tprops.save_role(rowData.id, key ,newValue)\r\n\t\t\t\t\tsetTimeout(resolve, 1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}}\r\n\t/>)\r\n}","import React, {Component, useState} from 'react'\r\nimport MaterialTable from \"./Component/MaterialTable\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tmain_title: '',\r\n\t\tquestions: [],\r\n\t\tcolumns: [],\r\n\t\tusers: [],\r\n\t\tusers_data: [],\r\n\t\tusers_row: [],\r\n\t\tready: false\r\n\t}\r\n\r\n\tdownloadData = (url) => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.columns()\r\n\t\t\t\t\tlet usersRef = firebase.firestore().collection('users')\r\n\t\t\t\t\tusersRef.get().then(docs => {\r\n\t\t\t\t\t\tdocs.forEach(doc => this.state.users.push(doc.id))\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tlet rootRef = firebase.firestore().collection('responses')\r\n\t\t\t\t\t\tthis.state.users.forEach(user => {\r\n\t\t\t\t\t\t\tlet userRef = rootRef.doc(user)\r\n\t\t\t\t\t\t\tlet answersRef = userRef.collection(\"answers\")\r\n\t\t\t\t\t\t\tanswersRef.where(\"form_name\", \"==\", this.state.main_title).get().then(querySnapshot => {\r\n\t\t\t\t\t\t\t\tquerySnapshot.forEach((snap, index) => {\r\n\t\t\t\t\t\t\t\t\tlet row = {}\r\n\t\t\t\t\t\t\t\t\tlet element = snap.data()\r\n\t\t\t\t\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\t\t\t\t\tlet keys = Object.keys(this.state.columns)\r\n\t\t\t\t\t\t\t\t\t\t// console.log(element.answers)\r\n\t\t\t\t\t\t\t\t\t\tlet answers = []\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.state.questions.forEach((question, ind) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(ind)\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(question)\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(element.answers[ind])\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (question.type === 'multiradio') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet len = question.subquestion.length\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind] && element.answers[ind][i]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push(element.answers[ind][i])\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push('-')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push(element.answers[ind])\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push('-')\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(answers)\r\n\r\n\t\t\t\t\t\t\t\t\t\tkeys.forEach(key => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (answers[key]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trow[key] = answers[key]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\trow[key] = \"-\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\tlet arr = [...this.state.users_row]\r\n\t\t\t\t\t\t\t\t\t\tarr.push(row)\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({users_row: arr})\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(arr)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcolumns() {\r\n\t\tlet tmpCols = []\r\n\r\n\t\tthis.state.questions.forEach((el, i) => {\r\n\t\t\tif (el.type === 'multiradio') {\r\n\t\t\t\tel.subquestion.forEach(subquestion => tmpCols.push({title: subquestion.q, editable: \"never\"}))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmpCols.push({title: el.title, editable: \"never\"})\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet cols = tmpCols.map((col, i) => col = {...col, field: i})\r\n\t\tconsole.log(cols)\r\n\t\tthis.setState({columns: cols})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData(this.props.url)\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<button onClick={() => this.setState({ready: true})}>Set ready</button>\r\n\t\t\t\t{this.state.ready ? <MaterialTable columns={this.state.columns} title={this.state.main_title} data={this.state.users_row}/> : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;","import React, {Component, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\nimport Template from \"../Template\"\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\twithRouter,\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\ttablets: [],\r\n\t\tdata: [],\r\n\t\tcolumns: [],\r\n\t\tusers: [],\r\n\t\tusers_by_column: {}\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch('https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/config_v2.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttablets: data\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t{this.state.tablets.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t<Link to={'/ElectionsMonitoringDashboard/tablets' + el.path + window.location.search}>{el.label}</Link>\r\n\t\t\t\t\t\t\t</li>)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{this.state.tablets.map((el, i) => (\r\n\t\t\t\t\t\t\t<Route key={i} path={\"/ElectionsMonitoringDashboard/tablets\" + el.path}>\r\n\t\t\t\t\t\t\t\t{() => <Template url={el.url} label={el.label}/>}\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport firebase from '../../utils/firebase'\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nlet lookup = {\r\n    ok: <DoneIcon style={{ color: '#4BB543' }} />,\r\n    ok_no_data: <DoneIcon style={{ color: 'grey' }} />,\r\n    notice: <DoneIcon style={{ color: '#fddb3a' }} />,\r\n    warning: <DoneIcon style={{ color: 'red' }} />\r\n  }\r\n\r\nlet lookupName = {}\r\nlet lookupEmail = {}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: [],\r\n    columns: [],\r\n    ready: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    let rootRef = firebase.database().ref().child('users_tests').child('users')\r\n    rootRef.on('value', snap => {\r\n      let data = Object.values(snap.val())\r\n      data.forEach(d => {\r\n        lookupName[d.name] = d.name\r\n        lookupEmail[d.email] = d.email\r\n      })\r\n      let flatData = data.map(row => {\r\n        let testKeys = Object.keys(row.tests)\r\n        testKeys.forEach((key, i) => {\r\n          row[key] = row.tests[key]\r\n        })\r\n        let {tests, ...newData} = row\r\n        console.log(newData)\r\n        return newData\r\n      })\r\n\r\n      // Dynamically creating columns\r\n      let keys = Object.keys(flatData[0])\r\n      let columns = keys.map(key => {\r\n        let lk = lookup\r\n        if (key === 'name') {\r\n          lk = lookupName\r\n        }\r\n        else if (key === 'email') {\r\n          lk = lookupEmail\r\n        }\r\n        return {title: key, field: key, render: rowData => {\r\n          if (rowData[key].status) {\r\n            if (rowData[key].description) {\r\n              return <Tooltip title={rowData[key].description} arrow>{lookup[rowData[key].status]}</Tooltip>\r\n            }\r\n            else {\r\n              return lookup[rowData[key].status]\r\n            }\r\n          }\r\n          else {\r\n            return rowData[key]\r\n          }\r\n        },\r\n        customFilterAndSearch: (term, rowData) => {\r\n          if (rowData[key].status) {\r\n            return (rowData[key].status).indexOf(term) !== -1\r\n          }\r\n          else {\r\n            return (rowData[key]).indexOf(term) !== -1\r\n          }\r\n        },\r\n        lookup: lk\r\n      }\r\n      })\r\n\r\n      this.setState({data: flatData})\r\n      this.setState({columns: columns})\r\n      this.setState({ready: true})\r\n      console.log(columns)\r\n      console.log(this.state.data)\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.ready ? <div style={{ maxWidth: '100%' }}>\r\n        <MaterialTable\r\n          columns={this.state.columns}\r\n          data={this.state.data}\r\n          options={{\r\n            filtering: true,\r\n            padding: \"dense\"\r\n          }}\r\n          title=\"Kloop Table\"\r\n        />\r\n      </div> : null\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, {Component, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\n\r\nimport MaterialTable from \"../Component/MaterialTable\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tcolumns: [],\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/kloop-table/config.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tcolumns: data.fields.mainAdminTable\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t\tlet rootRef = firebase.firestore().collection('users')\r\n\r\n\t\trootRef.onSnapshot(snap => {\r\n\t\t\tlet data = [];\r\n\t\t\tlet dataKeys = [];\r\n\t\t\tsnap.docs.map((el, i) => {\r\n\t\t\t\tdata.push(el.data())\r\n\t\t\t\tdataKeys.push(el.id)\r\n\t\t\t})\r\n\t\t\tconst dataRows = []\r\n\r\n\t\t\tdata.forEach((el, i) => {\r\n\r\n\t\t\t\tlet columnsName = {}\r\n\r\n\t\t\t\tObject.keys(el).forEach(key => {\r\n\t\t\t\t\tcolumnsName[key] = el[key]\r\n\t\t\t\t})\r\n\t\t\t\tcolumnsName['id'] = dataKeys[i]\r\n\t\t\t\tdataRows[i] = columnsName\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({data: dataRows})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tsave_role(id, key, newRole) {\r\n\t\tlet rootRef = firebase.firestore().collection('users').doc(`${id}`)\r\n\t\t\t.update({\r\n\t\t\t\t[key]: newRole\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<MaterialTable columns={this.state.columns}\r\n\t\t\t\t               data={this.state.data} save_role={this.save_role}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport app from \"../../utils/firebase.js\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\twithRouter\r\n} from \"react-router-dom\";\r\nimport Tablets from \"../../Components/auth/Tables\"\r\nimport AdminTable from \"../../Components/auth/AdminTable\"\r\nimport MainAdminTable from \"../../Components/auth/MainAdminTable\"\r\nconst queryString = require('query-string');\r\n\r\n\r\nconst Home = () => {\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [home, setHome] = useState(\"\")\r\n\r\n\tuseEffect(() => {\r\n\t\tlet urlString = queryString.parse(window.location.search)\r\n\t\tconsole.log(urlString)\r\n\t\tsetHome(urlString.url)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tsetForms(data)\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Home</h1>\r\n\t\t\t<button onClick={() => app.auth().signOut()}>Sign out</button>\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/ElectionsMonitoringDashboard/tablets\" + window.location.search}>Формы</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/ElectionsMonitoringDashboard/admin\" + window.location.search}>Таблица Атая</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/ElectionsMonitoringDashboard/admin-role\" + window.location.search}>Таблица юзеров с ролями</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</nav>\r\n\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/ElectionsMonitoringDashboard/tablets\" component={Tablets}/>\r\n\t\t\t\t\t\t<Route exact path=\"/ElectionsMonitoringDashboard/admin\" component={AdminTable}/>\r\n\t\t\t\t\t\t<Route exact path=\"/ElectionsMonitoringDashboard/admin-role\" component={MainAdminTable}/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app, {signInWithGoogle} from \"../../utils/firebase.js\";\r\nimport { AuthContext } from \"../../utils/Auth.js\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={\"/ElectionsMonitoringDashboard/\" + window.location.search} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n\r\n      <button onClick={signInWithGoogle}>Sign-in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withRouter(Login);\r\n","import React, {Component} from 'react'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\twithRouter\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./utils/Auth\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Home from \"./Components/auth/Home\";\r\nimport Login from \"./Components/auth/Login\";\r\n\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AuthProvider>\r\n\t\t\t\t<div className={'App'}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<PrivateRoute exact path={\"/ElectionsMonitoringDashboard/\"} component={Home}/>\r\n\t\t\t\t\t\t<Route exact path={\"/ElectionsMonitoringDashboard/login\"} component={Login}/>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</div>\r\n\t\t\t</AuthProvider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
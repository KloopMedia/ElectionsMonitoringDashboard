{"version":3,"sources":["../node_modules/jspdf/dist sync","utils/firebase.js","utils/Auth.js","utils/PrivateRoute.js","Components/Component/MaterialTable.js","Components/Template.js","Components/auth/Tables.js","Components/auth/AdminTable.js","Components/auth/MainAdminTable.js","Components/auth/Dashboard.js","Components/auth/TableSelector.js","Components/auth/AnswersTable.js","Components/auth/AbsentTableSelector.js","Components/auth/AbsentTable.js","Components/auth/Home.js","Components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","app","onAuthStateChanged","user","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","window","location","search","MTable","props","title","columns","data","options","paging","filtering","fixedColumns","left","cellEditable","onCellEditApproved","newValue","oldValue","rowData","columnDef","Promise","reject","key","Object","values","indexOf","save_role","setTimeout","queryString","require","App","state","main_title","questions","users","users_data","users_row","ready","downloadData","url","urlString","parse","decode","console","log","fetch","then","response","json","setState","firestore","collection","get","docs","forEach","doc","push","rootRef","where","querySnapshot","snap","index","row","element","answers","question","ind","type","len","subquestion","length","i","arr","tmpCols","this","el","q","editable","cols","map","col","field","className","onClick","Component","lookup","ok","style","color","ok_no_data","notice","warning","lookupName","lookupEmail","database","ref","child","on","val","d","name","email","flatData","tests","newData","lk","width","status","description","Tooltip","arrow","customFilterAndSearch","term","maxWidth","padding","Dashboard","userData","setUserData","setColumns","districtLookup","setDisLookup","setReady","mainAdminTable","disLookup","district","polling_station","c","pageSize","emptyRowsWhenPaging","pageSizeOptions","exportButton","update","updateUserData","Tables","forms","setForms","useRouteMatch","path","label","Template","AnswersTable","setAnswersData","setFilesData","formData","setFormData","rows","setRows","table","useParams","r","f","createColumns","a","files","usersRef","userRef","answersRef","date","filesRef","filepath","answer_id","photo_url","public_url","us","all","userKeys","createRows","getData","toString","unshift","image","Grid","container","display","flexWrap","ext","match","open","src","alt","cursor","paddingRight","filesObject","nest","rollup","v","entries","file","answer","tmp","column","formatDate","Date","seconds","getDate","getMonth","getFullYear","join","getHours","getMinutes","getSeconds","position","height","top","marginLeft","marginTop","CircularProgress","size","senders","setSenders","absentUsers","setAbsentUsers","setUserContactData","role","setRole","usersData","setUsersData","usersObject","usersId","sendersId","identifier","uniqueIds","Set","absents","filter","includes","makeRows","contactData","limit","createRow","tmpRows","Home","signOut","exact","TableSelector","AdminTable","Dasboard","AbsentTableSelector","AbsentTable","withRouter","history","Login","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error","message"],"mappings":"mGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,4NCczBC,IAASC,cApBc,CACvBC,OAAQ,0CACJC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAanB,IAAMC,EAAW,IAAIV,IAASW,KAAKC,mBACtBC,EAAmB,WAC/Bb,IAASW,OAAOG,gBAAgBJ,IAElBV,IAAf,ECxBae,EAAcC,IAAMC,gBAEpBC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACNC,mBAAS,MADH,mBACrCC,EADqC,KACxBC,EADwB,OAEdF,oBAAS,GAFK,mBAErCG,EAFqC,KAE5BC,EAF4B,KAW5C,OAPAC,qBAAU,WACRC,EAAIf,OAAOgB,oBAAmB,SAACC,GAC7BN,EAAeM,GACfJ,GAAW,QAEZ,IAEAD,EACM,kDAIP,kBAACR,EAAYc,SAAb,CACEC,MAAO,CACLT,gBAGDF,I,SCLQY,EAjBM,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAA8BC,EAAW,6BACxDb,EAAec,qBAAWpB,GAA1BM,YACP,OACE,kBAAC,IAAD,iBACMa,EADN,CAEEE,OAAQ,SAAAC,GAAU,OACdhB,EACA,kBAACW,EAAmBK,GAEpB,kBAAC,IAAD,CAAUC,GAAI,sCAAwCC,OAAOC,SAASC,c,kCCVjE,SAASC,EAAOC,GAG9B,OAAQ,kBAAC,IAAD,CACPC,MAAOD,EAAMC,MACbC,QAASF,EAAME,QACfC,KAAMH,EAAMG,KACZC,QAAS,CACRC,QAAQ,EACRC,WAAW,EACXC,aAAc,CACbC,KAAM,IAGRC,aAAc,CACbC,mBAAoB,SAACC,EAAUC,EAAUC,EAASC,GACjD,OAAO,IAAIC,SAAQ,SAAC9D,EAAS+D,GAE5B,IAAMC,EAAMC,OAAOlE,KAAK6D,GAASK,OAAOC,OAAON,GAASO,QAAQR,IAEhEZ,EAAMqB,UAAUR,EAAQzD,GAAI6D,EAAKN,GACjCW,WAAWrE,EAAS,UCpBzB,IAAMsE,EAAcC,EAAQ,IAqIbC,E,4MAlIdC,MAAQ,CACPC,WAAY,GACZC,UAAW,GACX1B,QAAS,GACT2B,MAAO,GACPC,WAAY,GACZC,UAAW,GACXC,OAAO,G,EAGRC,aAAe,SAACC,GACf,IAAIC,EAAYZ,EAAYa,MAAMxC,OAAOC,SAASC,OAAQ,CAACuC,QAAQ,IACnEC,QAAQC,IAAIJ,GAEXK,MAAMN,GACJO,MAAK,SAACC,GAEN,OADAJ,QAAQC,IAAI,WAAYG,GACjBA,EAASC,UAEhBF,MAAK,SAACtC,GACNmC,QAAQC,IAAI,OAAQpC,GACpB,EAAKyC,SAAS,CACbhB,UAAWzB,EAAKyB,UAChBD,WAAYxB,EAAKwB,aAElB,EAAKzB,UACU7C,EAASwF,YAAYC,WAAW,SACtCC,MAAMN,MAAK,SAAAO,GACnBA,EAAKC,SAAQ,SAAAC,GAAG,OAAI,EAAKxB,MAAMG,MAAMsB,KAAKD,EAAI9F,UAC5CqF,MAAK,WACP,IAAIW,EAAU/F,EAASwF,YAAYC,WAAW,aAC9C,EAAKpB,MAAMG,MAAMoB,SAAQ,SAAAhE,GACVmE,EAAQF,IAAIjE,GACD6D,WAAW,WACzBO,MAAM,YAAa,KAAM,EAAK3B,MAAMC,YAAYoB,MAAMN,MAAK,SAAAa,GACrEA,EAAcL,SAAQ,SAACM,EAAMC,GAC5B,IAAIC,EAAM,GACNC,EAAUH,EAAKpD,OACnB,GAAIuD,EAAS,CACZ,IAAI1G,EAAOkE,OAAOlE,KAAK,EAAK0E,MAAMxB,SAE9ByD,EAAU,GAGd,EAAKjC,MAAME,UAAUqB,SAAQ,SAACW,EAAUC,GAMvC,GALIH,EAAQC,QAAQE,KAEnBvB,QAAQC,IAAIqB,GACZtB,QAAQC,IAAImB,EAAQC,QAAQE,KAEP,eAAlBD,EAASE,KAEZ,IADA,IAAIC,EAAMH,EAASI,YAAYC,OACtBC,EAAI,EAAGA,EAAIH,EAAKG,IACpBR,EAAQC,QAAQE,IAAQH,EAAQC,QAAQE,GAAKK,GAChDP,EAAQR,KAAKO,EAAQC,QAAQE,GAAKK,IAGlCP,EAAQR,KAAK,UAKXO,EAAQC,QAAQE,GACnBF,EAAQR,KAAKO,EAAQC,QAAQE,IAG7BF,EAAQR,KAAK,QAQhBnG,EAAKiG,SAAQ,SAAAhC,GACR0C,EAAQ1C,GACXwC,EAAIxC,GAAO0C,EAAQ1C,GAGnBwC,EAAIxC,GAAO,OAGb,IAAIkD,EAAG,YAAO,EAAKzC,MAAMK,WACzBoC,EAAIhB,KAAKM,GACT,EAAKb,SAAS,CAACb,UAAWoC,qB,wDAelC,IAAIC,EAAU,GAEdC,KAAK3C,MAAME,UAAUqB,SAAQ,SAACqB,EAAIJ,GACjB,eAAZI,EAAGR,KACNQ,EAAGN,YAAYf,SAAQ,SAAAe,GAAW,OAAII,EAAQjB,KAAK,CAAClD,MAAO+D,EAAYO,EAAGC,SAAU,aAGpFJ,EAAQjB,KAAK,CAAClD,MAAOqE,EAAGrE,MAAOuE,SAAU,aAG3C,IAAIC,EAAOL,EAAQM,KAAI,SAACC,EAAKT,GAAN,OAAe,2BAAOS,GAAP,IAAYC,MAAOV,OAEzDG,KAAKzB,SAAS,CAAC1C,QAASuE,M,0CAIxBJ,KAAKpC,aAAaoC,KAAKrE,MAAMkC,O,+BAKpB,IAAD,OACR,OACC,yBAAK2C,UAAU,OACd,4BAAQC,QAAS,kBAAM,EAAKlC,SAAS,CAACZ,OAAO,MAA7C,aACCqC,KAAK3C,MAAMM,MAAQ,kBAAC,EAAD,CAAe9B,QAASmE,KAAK3C,MAAMxB,QAASD,MAAOoE,KAAK3C,MAAMC,WAAYxB,KAAMkE,KAAK3C,MAAMK,YAAe,U,GA7HhHgD,aCKZxD,EAAcC,EAAQ,I,GAEVuD,Y,0BCHdC,EAAS,CACZC,GAAI,kBAAC,IAAD,CAAUC,MAAO,CAACC,MAAO,aAC7BC,WAAY,kBAAC,IAAD,CAAUF,MAAO,CAACC,MAAO,UACrCE,OAAQ,kBAAC,IAAD,CAAUH,MAAO,CAACC,MAAO,aACjCG,QAAS,kBAAC,IAAD,CAAUJ,MAAO,CAACC,MAAO,UAG/BI,EAAa,GACbC,EAAc,GAyFH/D,E,4MAtFdC,MAAQ,CACPvB,KAAM,GACND,QAAS,GACT8B,OAAO,G,kEAGa,IAAD,OACL3E,EAASoI,WAAWC,MAAMC,MAAM,eAAeA,MAAM,SAC3DC,GAAG,SAAS,SAAArC,GACnB,IAAIpD,EAAOe,OAAOC,OAAOoC,EAAKsC,OAC9B1F,EAAK8C,SAAQ,SAAA6C,GACZP,EAAWO,EAAEC,MAAQD,EAAEC,KACvBP,EAAYM,EAAEE,OAASF,EAAEE,SAE1B,IAAIC,EAAW9F,EAAKuE,KAAI,SAAAjB,GACRvC,OAAOlE,KAAKyG,EAAIyC,OACtBjD,SAAQ,SAAChC,EAAKiD,GACtBT,EAAIxC,GAAOwC,EAAIyC,MAAMjF,MAEIwC,EAArByC,MALyB,IAKfC,EALe,YAKJ1C,EALI,WAO9B,OADAnB,QAAQC,IAAI4D,GACLA,KAKJjG,EADOgB,OAAOlE,KAAKiJ,EAAS,IACbvB,KAAI,SAAAzD,GACtB,IAAImF,EAAKpB,EAMT,MALY,SAAR/D,EACHmF,EAAKb,EACa,UAARtE,IACVmF,EAAKZ,GAEC,CACNvF,MAAOgB,EAAK2D,MAAO3D,EAAKoF,MAAO,IAAK5G,OAAQ,SAAAoB,GAC3C,OAAIA,EAAQI,GAAKqF,OACZzF,EAAQI,GAAKsF,YACT,kBAACC,EAAA,EAAD,CAASvG,MAAOY,EAAQI,GAAKsF,YAAaE,OAAK,GAAEzB,EAAOnE,EAAQI,GAAKqF,SAErEtB,EAAOnE,EAAQI,GAAKqF,QAGrBzF,EAAQI,IAGjByF,sBAAuB,SAACC,EAAM9F,GAC7B,OAAIA,EAAQI,GAAKqF,QACgC,IAAxCzF,EAAQI,GAAKqF,OAAQlF,QAAQuF,IAEI,IAAjC9F,EAAQI,GAAMG,QAAQuF,IAGhC3B,OAAQoB,MAIV,EAAKxD,SAAS,CAACzC,KAAM8F,IACrB,EAAKrD,SAAS,CAAC1C,QAASA,IACxB,EAAK0C,SAAS,CAACZ,OAAO,IACtBM,QAAQC,IAAIrC,GACZoC,QAAQC,IAAI,EAAKb,MAAMvB,W,+BAMxB,OACCkE,KAAK3C,MAAMM,MAAQ,yBAAKkD,MAAO,CAAC0B,SAAU,SACzC,kBAAC,IAAD,CACC1G,QAASmE,KAAK3C,MAAMxB,QACpBC,KAAMkE,KAAK3C,MAAMvB,KACjBC,QAAS,CACRE,WAAW,EACXuG,QAAS,QACTtG,aAAc,CACbC,KAAM,IAIRP,MAAM,iBAEC,S,GAlFM8E,a,SCfZxD,EAAcC,EAAQ,ICAtBD,GDEYwD,YCFEvD,EAAQ,KAgHbsF,EA9GG,WAAO,IAAD,EACSrI,mBAAS,MADlB,mBAChBsI,EADgB,KACNC,EADM,OAEOvI,mBAAS,MAFhB,mBAEhByB,EAFgB,KAEP+G,EAFO,OAGgBxI,mBAAS,MAHzB,mBAGhByI,EAHgB,KAGAC,EAHA,OAIG1I,oBAAS,GAJZ,mBAIhBuD,EAJgB,KAIToF,EAJS,KAMvBtI,qBAAU,WACTsI,GAAS,GAGT,IAAIjF,EAAYZ,EAAYa,MAAMxC,OAAOC,SAASC,OAAQ,CAACuC,QAAQ,IAC/DF,EAAUD,IACbM,MAAML,EAAUD,KACdO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtC,GACLmC,QAAQC,IAAI,OAAQpC,GACpB8G,EAAW9G,EAAKkH,mBAGlB/E,QAAQC,IAAI,0BAIb,IAAIV,EAAQ,GACRyF,EAAY,GACDjK,EAASwF,YAAYC,WAAW,SACtCC,MAAMN,MAAK,SAAUa,GAC7BA,EAAcL,SAAQ,SAAAC,GACrB,IAAI/C,EAAI,aAAI/C,GAAI8F,EAAI9F,IAAO8F,EAAI/C,QAC1BA,EAAKoH,SAGTD,EAAUpE,EAAI/C,OAAOoH,UAAYrE,EAAI/C,OAAOoH,SAF5CpH,EAAI,SAAe,OAIfA,EAAKqH,kBACTrH,EAAI,gBAAsB,QAE3B0B,EAAMsB,KAAKhD,MAEZmC,QAAQC,IAAIV,GACZmF,EAAYnF,GACZsF,EAAaG,GACbF,GAAS,QAGR,IAEHtI,qBAAU,WACT,GAAIoB,GAAWgH,EAAgB,CAC9B,IAAIvC,EAAMzE,EAAQwE,KAAI,SAAA+C,GACrB,MAAgB,aAAZA,EAAE7C,OACL6C,EAAEzC,OAAF,2BAAeyC,EAAEzC,QAAWkC,GACrBO,GAEAA,KAKT9C,EAAI1B,SAAQ,SAACqB,EAAIJ,GACfI,EAAG+B,MAAQ,OAEb/D,QAAQC,IAAI,MAAO2E,GACnB5E,QAAQC,IAAI,MAAOoC,MAIlB,CAACzE,EAASgH,IAeb,OACClF,EAAQ,6BACP,kBAAC,IAAD,CACa/B,MAAO,+CAAc8G,EAAS9C,OAC1C/D,QAASA,EACTC,KAAM4G,EACN3G,QAAS,CACRE,WAAW,EACXoH,SAAU,GACKC,qBAAqB,EACrBC,gBAAiB,CAAC,GAAI,GAAI,KACzCC,cAAc,EACdtH,aAAc,CACbC,KAAM,IAGRC,aAAc,CACbC,mBAAoB,SAACC,EAAUC,EAAUC,EAASC,GACjD,OAAOzD,EAASwF,YAAYC,WAAW,SAASI,IAAIrC,EAAQzD,IAAI0K,OAAzD,eAAkEhH,EAAU8D,MAAQjE,IACzF8B,MAAK,kBA/BW,SAACrF,EAAIwH,EAAOzF,GAElC,IADA,IAAIgB,EAAI,YAAO4G,GACN7C,EAAI,EAAGA,EAAI/D,EAAK8D,OAAQC,IAChC,GAAI/D,EAAK+D,GAAG9G,KAAOA,EAAI,CACtB+C,EAAK+D,GAAGU,GAASzF,EACjB6H,EAAY7G,GACZ,OAyBe4H,CAAelH,EAAQzD,GAAI0D,EAAU8D,MAAOjE,WAIpD,MCnGLY,EAAcC,EAAQ,IAgDbwG,EA9CA,WAAO,IAAD,EACMvJ,mBAAS,IADf,mBACbwJ,EADa,KACNC,EADM,OAEMzJ,oBAAS,GAFf,mBAEbuD,EAFa,KAENoF,EAFM,OAIAe,cAAdC,EAJc,EAIdA,KAAMlG,EAJQ,EAIRA,IAoBZ,OAlBApD,qBAAU,WACTsI,GAAS,GACH,IAAIjF,EAAYZ,EAAYa,MAAMxC,OAAOC,SAASC,QAClDwC,QAAQC,IAAIJ,GACdA,EAAUD,IACbM,MAAML,EAAUD,KACfO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACtC,GACNmC,QAAQC,IAAI,OAAQpC,GACpB+H,EAAS/H,EAAK8H,OACdb,GAAS,MAGV9E,QAAQC,IAAI,4BAEX,IAIIP,EAAQ,6BACJ,4BACCiG,EAAMvD,KAAI,SAACJ,EAAIJ,GACd,OACE,wBAAIjD,IAAKiD,GACP,kBAAC,IAAD,CAAMvE,GAAIuC,EAAMoC,EAAG8D,MAAO9D,EAAG+D,YAKnC,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAMA,EAAO,WAClB,kBAACE,EAAD,SAGK,M,oDCjDf/G,EAAcC,EAAQ,IAuOb+G,EArOM,WAAO,IAAD,EACY9J,mBAAS,MADrB,mBACN+J,GADM,aAEQ/J,mBAAS,MAFjB,mBAERgK,GAFQ,aAGIhK,mBAAS,MAHb,mBAGnByB,EAHmB,KAGV+G,EAHU,OAIMxI,mBAAS,MAJf,mBAInBiK,EAJmB,KAITC,EAJS,OAKAlK,oBAAS,GALT,mBAKnBuD,EALmB,KAKZoF,EALY,OAMF3I,mBAAS,MANP,mBAMnBmK,EANmB,KAMbC,EANa,KAQpBC,EAAUC,cAAVD,MAENhK,qBAAU,WAGT,IAAIqD,EAAYZ,EAAYa,MAAMxC,OAAOC,SAASC,OAAQ,CAAEuC,QAAQ,IAChEF,EAAUD,IACbM,MAAML,EAAUD,KACdO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtC,GACLA,EAAK8H,MAAMhF,SAAQ,SAAA6C,GACdA,EAAEsC,OAAS,IAAMU,GACpBtG,MAAMsD,EAAE5D,KAAKO,MAAK,SAAAuG,GAAC,OAAIA,EAAErG,UAAQF,MAAK,SAAAwG,GACrCN,EAAYM,GAEZC,EAAcD,EAAErH,oBAMrBU,QAAQC,IAAI,4BAEX,IAEHzD,qBAAU,WA6CL4J,GAAYxI,GA3CH,uCAAG,kCAAAiJ,EAAA,6DACXtH,EAAQ,GACR1B,EAAO,GACPiJ,EAAQ,GACRC,EAAWhM,EAASwF,YAAYC,WAAW,SAJhC,SAKTuG,EAAStG,MAAMN,MAAK,SAAAO,GACzBA,EAAKC,SAAQ,SAAAC,GAAG,OAAIrB,EAAMsB,KAAK,CAAC/F,GAAI8F,EAAI9F,GAAI+C,KAAM+C,EAAI/C,eACpDsC,KAFG,sBAEE,8BAAA0G,EAAA,6DACH/F,EAAU/F,EAASwF,YAAYC,WAAW,aADvC,SAEQjB,EAAM6C,IAAN,uCAAU,WAAMzF,GAAN,mBAAAkK,EAAA,6DACpBG,EAAUlG,EAAQF,IAAIjE,EAAK7B,IAC3BmM,EAAaD,EAAQxG,WAAW,WAFZ,SAGlByG,EAAWlG,MAAM,YAAa,KAAMqF,EAAS/G,YAAYoB,MAAMN,MAAK,SAAAa,GACzEA,EAAcL,SAAQ,SAAAM,GAErB,IAAIuC,EAAIvC,EAAKpD,OACbA,EAAKgD,KAAL,uCAAe2C,EAAEnC,SAAY1E,EAAKkB,MAAlC,IAAwCqJ,KAAM1D,EAAE0D,KAAMpM,GAAImG,EAAKnG,YAPzC,cAUpBqM,EAAWH,EAAQxG,WAAW,SAVV,SAWlB2G,EAASpG,MAAM,YAAa,KAAMqF,EAAS/G,YAAYoB,MAAMN,MAAK,SAAAa,GACvEA,EAAcL,SAAQ,SAAAM,GAErB,IAAIuC,EAAIvC,EAAKpD,OACT2F,EAAE4D,SACLN,EAAMjG,KAAK,CAAE/F,GAAI0I,EAAE6D,UAAWC,UAAW9D,EAAE4D,WAEnC5D,EAAE+D,YACVT,EAAMjG,KAAK,CAAE/F,GAAI0I,EAAE6D,UAAWC,UAAW9D,EAAE+D,mBAnBtB,2CAAV,uDAFR,OAEHC,EAFG,OA0BP/I,QAAQgJ,IAAID,GAAIrH,MAAK,WACpB+F,EAAerI,GACfsI,EAAaW,GACb,IAAIY,EAAW9I,OAAOlE,KAAK6E,EAAM,GAAG1B,MACpC8J,EAAW9J,EAAMiJ,EAAOY,MA9BlB,4CAPO,2CAAH,oDA4CZE,KAEC,CAACxB,EAAUxI,IAGd,IAAMgJ,EAAgB,SAACtH,GACtB,IAAI6C,EAAO,GACX7C,EAAUqB,SAAQ,SAACW,EAAUM,GACN,eAAlBN,EAASE,KACZF,EAASI,YAAYf,SAAQ,SAAAe,GAAW,OAAIS,EAAKtB,KAAK,CAAElD,MAAO+D,EAAYO,EAAG8B,MAAO,SAGrF5B,EAAKtB,KAAK,CAAElD,MAAO2D,EAAS3D,MAAOoG,MAAO,SAG5C/D,QAAQC,IAAIkC,GACZA,EAAKxB,SAAQ,SAAC0B,EAAKT,GAAN,OAAYS,EAAG,MAAYT,EAAEiG,cAC1C1F,EAAK2F,QAAQ,CAACnK,MAAO,YAAa2E,MAAO,YAAayB,MAAO,MAC7D5B,EAAK2F,QAAQ,CAACnK,MAAO,WAAY2E,MAAO,OAAQyB,MAAO,MACvD5B,EAAKtB,KAAK,CAAClD,MAAO,OAAQ2E,MAAO,OAAQyB,MAAO,MAChD5B,EAAKtB,KAAK,CAAClD,MAAO,SAAU2E,MAAO,QAASyB,MAAO,IAAK5G,OAAQ,SAAAoB,GAC/D,OAAIA,EAAQwJ,MAEX,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,OAAOtF,MAAO,CAACuF,SAAU,YAC/C5J,EAAQwJ,MAAM3F,KAAI,SAACxC,EAAKgC,GACxB,IAAIwG,EAAMxI,EAAIyI,MAAM,gCACpB,OAAID,GAAmB,SAAXA,EAAI,IAA4B,SAAXA,EAAI,IAA4B,SAAXA,EAAI,GAGjDA,GAAkB,SAAXA,EAAI,GACZ,4BAAQzJ,IAAKiD,EAAGY,QAAS,kBAAMlF,OAAOgL,KAAK1I,KAAO,QAAUgC,GAG5D,4BAAQjD,IAAKiD,EAAGY,QAAS,kBAAMlF,OAAOgL,KAAK1I,KAAO,yBAA2BgC,GAN7E,yBAAKjD,IAAKiD,EAAG2G,IAAK3I,EAAK4I,IAAK,QAAU5G,EAAGgB,MAAO,CAACmB,MAAO,IAAK0E,OAAQ,UAAWC,aAAc,OAAQlG,QAAS,kBAAMlF,OAAOgL,KAAK1I,UAapI,YAGT+E,EAAWxC,IAGNwF,EAAa,SAAC9J,EAAMiJ,EAAOY,GAGhC,IAAIiB,EAAc,GACd7B,EAAMnF,OAAS,GACAiH,cACjBjK,KAAI,SAAS6E,GAAK,OAAOA,EAAE1I,MAC3B+N,QAAO,SAASC,GAAK,OAAOA,EAAE1G,KAAI,SAAAuE,GAAC,OAAIA,EAAEW,gBACzCyB,QAAQjC,GAEGnG,SAAQ,SAAAqI,GACnBL,EAAYK,EAAKrK,KAAOqK,EAAKnM,SAK/B,IAAIyJ,EAAO,GACXzI,EAAK8C,SAAQ,SAAA6C,GACZ,IAAIrC,EAAM,GACViF,EAAS9G,UAAUqB,SAAQ,SAACW,EAAUC,GACrC,GAAsB,eAAlBD,EAASE,KAEZ,IADA,IAAIC,EAAMH,EAASI,YAAYC,OACtBC,EAAI,EAAGA,EAAIH,EAAKG,IACpB4B,EAAEjC,IAAQiC,EAAEjC,GAAKK,GACpBT,EAAIN,KAAKS,EAAS2H,OAAOzF,EAAEjC,GAAKK,KAGhCT,EAAIN,KAAK,UAKP2C,EAAEjC,GACLJ,EAAIN,KAAK2C,EAAEjC,IAGXJ,EAAIN,KAAK,QAKZ,IAAIqI,EAAM,GACVtK,OAAOC,OAAOjB,GAAS+C,SAAQ,SAAAwI,GAC9BD,EAAIC,EAAO7G,OAASnB,EAAIgI,EAAO7G,UAGhCoF,EAAS/G,SAAQ,SAAAhC,GAChBuK,EAAIvK,GAAO6E,EAAE7E,GACD,SAARA,IACHuK,EAAIvK,GAAOyK,EAAW5F,EAAE7E,QAG1BuK,EAAG,MAAYP,EAAYnF,EAAE1I,IAC7BwL,EAAKzF,KAAKqI,MAEX3C,EAAQD,GACRxB,GAAS,IAGJsE,EAAa,SAAC5F,GACnB,IAAI0D,EAAO,IAAImC,KAAsB,IAAjB,eAAI7F,GAAG8F,SAQ3B,MAPmB,CAChBpC,EAAKqC,UAAU1B,WAAWlG,OAAS,EAAI,IAAMuF,EAAKqC,UAAYrC,EAAKqC,WAClErC,EAAKsC,WAAW,GAAG3B,WAAWlG,OAAS,EAAI,KAAOuF,EAAKsC,WAAW,GAAMtC,EAAKsC,WAAW,EACzFtC,EAAKuC,eAAeC,KAAK,KAAK,IAC9B,CAACxC,EAAKyC,WAAW9B,WAAWlG,OAAS,EAAI,IAAMuF,EAAKyC,WAAazC,EAAKyC,WACrEzC,EAAK0C,aAAa/B,WAAWlG,OAAS,EAAI,IAAMuF,EAAK0C,aAAe1C,EAAK0C,aACzE1C,EAAK2C,aAAahC,WAAWlG,OAAS,EAAI,IAAMuF,EAAK2C,aAAe3C,EAAK2C,cAAcH,KAAK,KAAK7B,YAKtG,OACCnI,EAAQ,6BACJ,kBAAC,IAAD,CACF/B,MAAOyI,EAAS/G,WAAa,iDAAgBiH,EAAK3E,OAAS,IACzD/D,QAASA,EACTC,KAAMyI,EACNxI,QAAS,CACXE,WAAW,EACXoH,SAAU,GACVC,qBAAqB,EACrBC,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAc,EACbtH,aAAc,CACbC,KAAM,OAKD,yBAAK0E,MAAS,CACnBkH,SAAU,WACVC,OAAQ,QACRhG,MAAO,QACPiG,IAAK,MACL9L,KAAM,MACN+L,WAAY,QACZC,UAAW,UAEX,kBAACC,EAAA,EAAD,CAAkBC,KAAM,IAAKxH,MAAO,CAACC,MAAO,YC7N5C5D,EAAcC,EAAQ,IAgDbwG,EA9CA,WAAO,IAAD,EACMvJ,mBAAS,IADf,mBACbwJ,EADa,KACNC,EADM,OAEMzJ,oBAAS,GAFf,mBAEbuD,EAFa,KAENoF,EAFM,OAIAe,cAAdC,EAJc,EAIdA,KAAMlG,EAJQ,EAIRA,IAoBZ,OAlBApD,qBAAU,WACTsI,GAAS,GACH,IAAIjF,EAAYZ,EAAYa,MAAMxC,OAAOC,SAASC,QAClDwC,QAAQC,IAAIJ,GACdA,EAAUD,IACbM,MAAML,EAAUD,KACfO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACtC,GACNmC,QAAQC,IAAI,OAAQpC,GACpB+H,EAAS/H,EAAK8H,OACdb,GAAS,MAGV9E,QAAQC,IAAI,4BAEX,IAIIP,EAAQ,6BACJ,4BACCiG,EAAMvD,KAAI,SAACJ,EAAIJ,GACd,OACE,wBAAIjD,IAAKiD,GACP,kBAAC,IAAD,CAAMvE,GAAIuC,EAAMoC,EAAG8D,MAAO9D,EAAG+D,YAKnC,6BAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOD,KAAMA,EAAO,WAClB,kBAACE,EAAD,SAGK,MCjDf/G,GAAcC,EAAQ,IA4Sb+G,GA1SM,WAAO,IAAD,EACY9J,mBAAS,MADrB,gCAEQA,mBAAS,OAFjB,gCAGIA,mBAAS,OAHb,mBAGnByB,EAHmB,KAGV+G,EAHU,OAIMxI,mBAAS,MAJf,mBAInBiK,EAJmB,KAITC,EAJS,OAKAlK,oBAAS,GALT,mBAKnBuD,EALmB,KAKZoF,EALY,OAMC3I,mBAAS,MANV,mBAMhBmK,EANgB,KAMVC,EANU,OAOOpK,mBAAS,MAPhB,mBAOhBkO,EAPgB,KAOPC,EAPO,OAQenO,mBAAS,MARxB,mBAQhBoO,EARgB,KAQHC,EARG,OASoBrO,mBAAS,MAT7B,mBASFsO,GATE,aAUFtO,mBAAS,MAVP,mBAUnBuO,EAVmB,KAUbC,EAVa,OAWQxO,mBAAS,MAXjB,mBAWnByO,EAXmB,KAWRC,EAXQ,KAapBrE,EAAUC,cAAVD,MAENhK,qBAAU,WAGT,IAAIqD,EAAYZ,GAAYa,MAAMxC,OAAOC,SAASC,OAAQ,CAAEuC,QAAQ,IAChEF,EAAUD,IACbM,MAAML,EAAUD,KACdO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAtC,GACLA,EAAK8H,MAAMhF,SAAQ,SAAA6C,GACdA,EAAEsC,OAAS,IAAMU,GACpBtG,MAAMsD,EAAE5D,KAAKO,MAAK,SAAAuG,GAAC,OAAIA,EAAErG,UAAQF,MAAK,SAAAwG,GACrCN,EAAYM,GACZgE,EAAQnH,EAAEkH,SAIqB,cAAXlH,EAAEsC,MACF5F,MAAMsD,EAAE5D,KAAKO,MAAK,SAAAuG,GAAC,OAAIA,EAAErG,UAAQF,MAAK,SAAAwG,GAC1DC,EAAcD,EAAErH,oBAMrBU,QAAQC,IAAI,4BAEX,IAEHzD,qBAAU,WAiDC4J,GAAYsE,GA/CT,uCAAG,oCAAA7D,EAAA,6DACXtH,EAAQ,GACRuL,EAAc,GACLC,EAAU,GACVC,EAAY,GACrBjE,EAAWhM,EAASwF,YAAYC,WAAW,SALhC,SAMTuG,EAAStG,MAAMN,MAAK,SAAAO,GACbA,EAAKC,SAAQ,SAAAC,GAQxBmK,EAAQlK,KAAKD,EAAI9F,IACjByE,EAAMsB,KAAN,aAAY/F,GAAI8F,EAAI9F,IAAO8F,EAAI/C,SAC/BiN,EAAYlK,EAAI9F,IAAM8F,EAAI/C,aAEzBsC,KAbG,sBAaE,8BAAA0G,EAAA,6DACH/F,EAAU/F,EAASwF,YAAYC,WAAW,aADvC,SAEQjB,EAAM6C,IAAN,uCAAU,WAAMzF,GAAN,iBAAAkK,EAAA,6DACpBG,EAAUlG,EAAQF,IAAIjE,EAAK7B,IAC3BmM,EAAaD,EAAQxG,WAAW,WAFZ,SAGlByG,EAAWlG,MAAM,aAAc,KAAMqF,EAAS6E,YAAYxK,MAAMN,MAAK,SAAAa,GAC1EA,EAAcL,SAAQ,SAAAM,GAEA+J,EAAUnK,KAAKlE,EAAK7B,UANnB,2CAAV,uDAFR,OAEH0M,EAFG,OAYP/I,QAAQgJ,IAAID,GAAIrH,MAAK,WACL,IAAI+K,EAAS,YAAO,IAAIC,IAAIH,IAC5BV,EAAWY,GACX,IAAIE,EAAUL,EAAQM,QAAQ,SAAErJ,GAAF,OAAWkJ,EAAUI,SAAUtJ,MAG7DhC,QAAQC,IAAI,oBAAqB+K,EAAUrJ,QAC3C3B,QAAQC,IAAI,mBAAoBiL,EAAUvJ,QAC1C3B,QAAQC,IAAI,oBAAqBmL,EAAQzJ,QACxD6I,EAAeY,GACfpL,QAAQC,IAAI6K,GACZD,EAAaC,MAvBP,4CAnBO,2CAAH,oDAgDHlD,KAGL,CAACxB,EAAUsE,IAGdlO,qBAAU,WACN,IAAM+O,EAAQ,uCAAG,gCAAA1E,EAAA,6DACT/F,EAAU/F,EAASwF,YAAYC,WAAW,aACxCgL,EAAc,GAFP,SAGIjB,EAAYnI,IAAZ,+BAAAyE,EAAA,MAAiB,WAAMlK,GAAN,iBAAAkK,EAAA,6DAE1BG,EAAUlG,EAAQF,IAAIjE,GACtBsK,EAAaD,EAAQxG,WAAW,WAHN,SAIxByG,EAAWlG,MAAM,YAAa,KAAM,qGAAqB0K,MAAM,GAAGhL,MAAMN,KAAxE,+BAAA0G,EAAA,MAA6E,WAAM7F,GAAN,SAAA6F,EAAA,sEACzE7F,EAAcL,QAAd,uCAAsB,WAAMM,GAAN,SAAA4F,EAAA,sDAGxB2E,EAAY3K,KAAZ,aAAkB/F,GAAI6B,GAASsE,EAAKpD,OAAOwD,UAHnB,2CAAtB,uDADyE,2CAA7E,uDAJwB,2CAAjB,uDAHJ,OAGTiF,EAHS,OAeb7H,QAAQgJ,IAAInB,GAAMnG,MAAK,WACnBH,QAAQC,IAAIuL,GACZf,EAAmBe,GAE/BE,EAAUF,MAnBW,2CAAH,qDAwBVjB,GAAeK,GAAaF,GAC5Ba,MAEL,CAAChB,EAAaK,EAAWF,IAI/B,IAAM9D,EAAgB,SAACtH,GACtB,IAAI6C,EAAO,GACX7C,EAAUqB,SAAQ,SAACW,EAAUM,GACN,eAAlBN,EAASE,KACZF,EAASI,YAAYf,SAAQ,SAAAe,GAAW,OAAIS,EAAKtB,KAAK,CAAElD,MAAO+D,EAAYO,EAAG8B,MAAO,SAGrF5B,EAAKtB,KAAK,CAAElD,MAAO2D,EAAS3D,MAAOoG,MAAO,SAG5C/D,QAAQC,IAAIkC,GACZA,EAAKxB,SAAQ,SAAC0B,EAAKT,GAAN,OAAYS,EAAG,MAAYT,EAAEiG,cAG1C1F,EAAK2F,QAAQ,CAACnK,MAAO,OAAQ2E,MAAO,OAAQyB,MAAO,MA4B7CY,EAAWxC,IA0EZuJ,EAAY,SAAC7N,GAClB,IAAI8N,EAAU,GACd9N,EAAK8C,SAAQ,SAAA6C,GACRA,EAAE1I,IAAM8P,EAAUpH,EAAE1I,MACnB8P,EAAUpH,EAAE1I,IAAI4P,OAASA,GAAiB,QAATA,IACpC1K,QAAQC,IAAI2K,EAAUpH,EAAE1I,IAAI4P,MAC5B1K,QAAQC,IAAIyK,GACZiB,EAAQ9K,KAAR,2BAAiB2C,GAAMoH,EAAUpH,EAAE1I,WAItCyL,EAAQoF,GACR7G,GAAS,IAIV,OACCpF,EAAQ,6BAEP,qHAAqB2K,EAAQ1I,OAA7B,+CACA,kIAAwB2E,EAAK3E,OAA7B,+CACG,kBAAC,IAAD,CACMhE,MAAOyI,EAAS/G,WACtBzB,QAASA,EACTC,KAAMyI,EACNxI,QAAS,CACXE,WAAW,EACXoH,SAAU,GACVC,qBAAqB,EACrBC,gBAAiB,CAAC,GAAI,GAAI,KAC1BC,cAAc,EACbtH,aAAc,CACbC,KAAM,OAKD,yBAAK0E,MAAS,CACnBkH,SAAU,WACVC,OAAQ,QACRhG,MAAO,QACPiG,IAAK,MACL9L,KAAM,MACN+L,WAAY,QACZC,UAAW,UAEX,kBAACC,EAAA,EAAD,CAAkBC,KAAM,IAAKxH,MAAO,CAACC,MAAO,YCpPnC+I,IAzCK1M,EAAQ,IAGf,WACZ,OACC,oCACC,oCACA,4BAAQsD,QAAS,kBAAM/F,EAAIf,OAAOmQ,YAAlC,YACA,kBAAC,IAAD,KACC,6BACC,6BACC,4BACC,4BACC,kBAAC,IAAD,CAAMxO,GAAI,WAAV,mCAED,4BACC,kBAAC,IAAD,CAAMA,GAAI,UAAV,wEAED,4BACC,kBAAC,IAAD,CAAMA,GAAI,eAAV,gIAED,4BACC,kBAAC,IAAD,CAAMA,GAAI,WAAV,iIAKH,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOyO,OAAK,EAAChG,KAAK,UAAU9I,UAAW+O,IACvC,kBAAC,IAAD,CAAOjG,KAAM,iBAAkB9I,UAAWiJ,IAC1C,kBAAC,IAAD,CAAO6F,OAAK,EAAChG,KAAK,SAAS9I,UAAWgP,IACtC,kBAAC,IAAD,CAAOF,OAAK,EAAChG,KAAK,cAAc9I,UAAWiP,IAC3C,kBAAC,IAAD,CAAOH,OAAK,EAAChG,KAAK,UAAU9I,UAAWkP,IACvC,kBAAC,IAAD,CAAOpG,KAAM,iBAAkB9I,UAAWmP,WC3BjCC,gBAnBD,SAAC,GAAgB,EAAdC,QAIf,OAFwBnP,qBAAWpB,GAA3BM,YAGC,kBAAC,IAAD,CAAUiB,GAAI,iCAAmCC,OAAOC,SAASC,SAIxE,6BACE,sCAEA,4BAAQgF,QAAS5G,GAAjB,2BCYSuD,G,uKAbb,OACC,kBAAC,EAAD,KACC,yBAAKoD,UAAW,OACf,kBAAC,IAAD,KACC,kBAAC,EAAD,CAAcuJ,OAAK,EAAChG,KAAM,iCAAkC9I,UAAW4O,KACvE,kBAAC,IAAD,CAAOE,OAAK,EAAChG,KAAM,sCAAuC9I,UAAWsP,Y,GAPzD7J,aCFE8J,QACW,cAA7BjP,OAAOC,SAASiP,UAEe,UAA7BlP,OAAOC,SAASiP,UAEhBlP,OAAOC,SAASiP,SAASnE,MACvB,2DCZNoE,IAAStP,OACP,kBAAC,IAAMuP,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcpN,MACrBS,MAAK,SAAA4M,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlN,QAAQkN,MAAMA,EAAMC,c","file":"static/js/main.ddfb81d6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 347;","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\napiKey: \"AIzaSyCCAhvWFvwuxDUXZ4aV-FhB_Dj-lp_frCw\",\r\n    authDomain: \"electionsmonitor-5d008.firebaseapp.com\",\r\n    databaseURL: \"https://electionsmonitor-5d008.firebaseio.com\",\r\n    projectId: \"electionsmonitor-5d008\",\r\n    storageBucket: \"electionsmonitor-5d008.appspot.com\",\r\n    messagingSenderId: \"145410178875\",\r\n    appId: \"1:145410178875:web:6cf434df68d3c65062811e\",\r\n    measurementId: \"G-EXC8T9QXES\"\r\n};\r\n// const firebaseConfigddd = {\r\n// apiKey: \"AIzaSyBj2q_xJTPtfgtRGz-SN8_NjVYQ9qtAzIw\",\r\n//     authDomain: \"electionsmonitorstaging.firebaseapp.com\",\r\n//     databaseURL: \"https://electionsmonitorstaging.firebaseio.com\",\r\n//     projectId: \"electionsmonitorstaging\",\r\n//     storageBucket: \"electionsmonitorstaging.appspot.com\",\r\n//     messagingSenderId: \"901357005980\",\r\n//     appId: \"1:901357005980:web:2006a62aa812492d489159\",\r\n//     measurementId: \"G-69DFTZBTQ7\"\r\n// };\r\nfirebase.initializeApp(firebaseConfig);\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nexport const signInWithGoogle = () => {\r\n\tfirebase.auth().signInWithPopup(provider);\r\n};\r\nexport default firebase;\r\n","import React, { useEffect, useState } from \"react\";\nimport app from \"./firebase.js\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n    });\n  }, []);\n\n  if(pending){\n    return <>Loading...</>\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/ElectionsMonitoringDashboard/login\" + window.location.search} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React, {useEffect, useState} from \"react\";\r\nimport MaterialTable from \"material-table\";\r\n\r\nexport default function MTable(props) {\r\n\r\n\r\n\treturn (<MaterialTable\r\n\t\ttitle={props.title}\r\n\t\tcolumns={props.columns}\r\n\t\tdata={props.data}\r\n\t\toptions={{\r\n\t\t\tpaging: false,\r\n\t\t\tfiltering: true,\r\n\t\t\tfixedColumns: {\r\n\t\t\t\tleft: 2,\r\n\t\t\t}\r\n\t\t}}\r\n\t\tcellEditable={{\r\n\t\t\tonCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\t\t\tconst key = Object.keys(rowData)[Object.values(rowData).indexOf(oldValue)]\r\n\r\n\t\t\t\t\tprops.save_role(rowData.id, key, newValue)\r\n\t\t\t\t\tsetTimeout(resolve, 1);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}}\r\n\t/>)\r\n}","import React, {Component, useState} from 'react'\r\nimport MaterialTable from \"./Component/MaterialTable\";\r\nimport firebase from \"../utils/firebase\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tmain_title: '',\r\n\t\tquestions: [],\r\n\t\tcolumns: [],\r\n\t\tusers: [],\r\n\t\tusers_data: [],\r\n\t\tusers_row: [],\r\n\t\tready: false\r\n\t}\r\n\r\n\tdownloadData = (url) => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch(url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tquestions: data.questions,\r\n\t\t\t\t\t\tmain_title: data.main_title\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.columns()\r\n\t\t\t\t\tlet usersRef = firebase.firestore().collection('users')\r\n\t\t\t\t\tusersRef.get().then(docs => {\r\n\t\t\t\t\t\tdocs.forEach(doc => this.state.users.push(doc.id))\r\n\t\t\t\t\t}).then(() => {\r\n\t\t\t\t\t\tlet rootRef = firebase.firestore().collection('responses')\r\n\t\t\t\t\t\tthis.state.users.forEach(user => {\r\n\t\t\t\t\t\t\tlet userRef = rootRef.doc(user)\r\n\t\t\t\t\t\t\tlet answersRef = userRef.collection(\"answers\")\r\n\t\t\t\t\t\t\tanswersRef.where(\"form_name\", \"==\", this.state.main_title).get().then(querySnapshot => {\r\n\t\t\t\t\t\t\t\tquerySnapshot.forEach((snap, index) => {\r\n\t\t\t\t\t\t\t\t\tlet row = {}\r\n\t\t\t\t\t\t\t\t\tlet element = snap.data()\r\n\t\t\t\t\t\t\t\t\tif (element) {\r\n\t\t\t\t\t\t\t\t\t\tlet keys = Object.keys(this.state.columns)\r\n\t\t\t\t\t\t\t\t\t\t// console.log(element.answers)\r\n\t\t\t\t\t\t\t\t\t\tlet answers = []\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\tthis.state.questions.forEach((question, ind) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(ind)\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(question)\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(element.answers[ind])\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (question.type === 'multiradio') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlet len = question.subquestion.length\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind] && element.answers[ind][i]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push(element.answers[ind][i])\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push('-')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (element.answers[ind]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push(element.answers[ind])\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tanswers.push('-')\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t// console.log(answers)\r\n\r\n\t\t\t\t\t\t\t\t\t\tkeys.forEach(key => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (answers[key]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\trow[key] = answers[key]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\trow[key] = \"-\"\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\tlet arr = [...this.state.users_row]\r\n\t\t\t\t\t\t\t\t\t\tarr.push(row)\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({users_row: arr})\r\n\t\t\t\t\t\t\t\t\t\t// console.log(arr)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcolumns() {\r\n\t\tlet tmpCols = []\r\n\r\n\t\tthis.state.questions.forEach((el, i) => {\r\n\t\t\tif (el.type === 'multiradio') {\r\n\t\t\t\tel.subquestion.forEach(subquestion => tmpCols.push({title: subquestion.q, editable: \"never\"}))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmpCols.push({title: el.title, editable: \"never\"})\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet cols = tmpCols.map((col, i) => col = {...col, field: i})\r\n\t\t// console.log(cols)\r\n\t\tthis.setState({columns: cols})\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData(this.props.url)\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<button onClick={() => this.setState({ready: true})}>Set ready</button>\r\n\t\t\t\t{this.state.ready ? <MaterialTable columns={this.state.columns} title={this.state.main_title} data={this.state.users_row}/> : null}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;","import React, {Component, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\nimport Template from \"../Template\"\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\twithRouter,\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\ttablets: [],\r\n\t\tdata: [],\r\n\t\tcolumns: [],\r\n\t\tusers: [],\r\n\t\tusers_by_column: {}\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (true) {\r\n\t\t\tfetch('https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/config_v2.json')\r\n\t\t\t\t// if (urlString.url) {\r\n\t\t\t\t// \tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\ttablets: data\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t{this.state.tablets.map((el, i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t<Link to={'/ElectionsMonitoringDashboard/tablets' + el.path + window.location.search}>{el.label}</Link>\r\n\t\t\t\t\t\t\t</li>)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{this.state.tablets.map((el, i) => (\r\n\t\t\t\t\t\t\t<Route key={i} path={\"/ElectionsMonitoringDashboard/tablets\" + el.path}>\r\n\t\t\t\t\t\t\t\t{() => <Template url={el.url} label={el.label}/>}\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;","import React, {Component} from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport firebase from '../../utils/firebase'\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {Box} from '@material-ui/core';\r\n\r\n\r\nlet lookup = {\r\n\tok: <DoneIcon style={{color: '#4BB543'}}/>,\r\n\tok_no_data: <DoneIcon style={{color: 'grey'}}/>,\r\n\tnotice: <DoneIcon style={{color: '#fddb3a'}}/>,\r\n\twarning: <DoneIcon style={{color: 'red'}}/>\r\n}\r\n\r\nlet lookupName = {}\r\nlet lookupEmail = {}\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tcolumns: [],\r\n\t\tready: false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet rootRef = firebase.database().ref().child('users_tests').child('users')\r\n\t\trootRef.on('value', snap => {\r\n\t\t\tlet data = Object.values(snap.val())\r\n\t\t\tdata.forEach(d => {\r\n\t\t\t\tlookupName[d.name] = d.name\r\n\t\t\t\tlookupEmail[d.email] = d.email\r\n\t\t\t})\r\n\t\t\tlet flatData = data.map(row => {\r\n\t\t\t\tlet testKeys = Object.keys(row.tests)\r\n\t\t\t\ttestKeys.forEach((key, i) => {\r\n\t\t\t\t\trow[key] = row.tests[key]\r\n\t\t\t\t})\r\n\t\t\t\tlet {tests, ...newData} = row\r\n\t\t\t\tconsole.log(newData)\r\n\t\t\t\treturn newData\r\n\t\t\t})\r\n\r\n\t\t\t// Dynamically creating columns\r\n\t\t\tlet keys = Object.keys(flatData[0])\r\n\t\t\tlet columns = keys.map(key => {\r\n\t\t\t\tlet lk = lookup\r\n\t\t\t\tif (key === 'name') {\r\n\t\t\t\t\tlk = lookupName\r\n\t\t\t\t} else if (key === 'email') {\r\n\t\t\t\t\tlk = lookupEmail\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: key, field: key, width: 150, render: rowData => {\r\n\t\t\t\t\t\tif (rowData[key].status) {\r\n\t\t\t\t\t\t\tif (rowData[key].description) {\r\n\t\t\t\t\t\t\t\treturn <Tooltip title={rowData[key].description} arrow>{lookup[rowData[key].status]}</Tooltip>\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn lookup[rowData[key].status]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn rowData[key]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcustomFilterAndSearch: (term, rowData) => {\r\n\t\t\t\t\t\tif (rowData[key].status) {\r\n\t\t\t\t\t\t\treturn (rowData[key].status).indexOf(term) !== -1\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn (rowData[key]).indexOf(term) !== -1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlookup: lk\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({data: flatData})\r\n\t\t\tthis.setState({columns: columns})\r\n\t\t\tthis.setState({ready: true})\r\n\t\t\tconsole.log(columns)\r\n\t\t\tconsole.log(this.state.data)\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\tthis.state.ready ? <div style={{maxWidth: '100%'}}>\r\n\t\t\t\t<MaterialTable\r\n\t\t\t\t\tcolumns={this.state.columns}\r\n\t\t\t\t\tdata={this.state.data}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tfiltering: true,\r\n\t\t\t\t\t\tpadding: \"dense\",\r\n\t\t\t\t\t\tfixedColumns: {\r\n\t\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttitle=\"Kloop Table\"\r\n\t\t\t\t/>\r\n\t\t\t</div> : null\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React, {Component, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\n\r\nimport MaterialTable from \"../Component/MaterialTable\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tdata: [],\r\n\t\tcolumns: [],\r\n\t}\r\n\r\n\tdownloadData = () => {\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tconsole.log(urlString)\r\n\t\tif (urlString.url) {\r\n\t\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\r\n\t\t\t\t\treturn response.json();\r\n\t\t\t\t})\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tcolumns: data.fields.mainAdminTable\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.downloadData()\r\n\t\tlet rootRef = firebase.firestore().collection('users')\r\n\r\n\t\trootRef.onSnapshot(snap => {\r\n\t\t\tlet data = [];\r\n\t\t\tlet dataKeys = [];\r\n\t\t\tsnap.docs.map((el, i) => {\r\n\t\t\t\tdata.push(el.data())\r\n\t\t\t\tdataKeys.push(el.id)\r\n\t\t\t})\r\n\t\t\tconst dataRows = []\r\n\r\n\t\t\tdata.forEach((el, i) => {\r\n\r\n\t\t\t\tlet columnsName = {}\r\n\r\n\t\t\t\tObject.keys(el).forEach(key => {\r\n\t\t\t\t\tcolumnsName[key] = el[key]\r\n\t\t\t\t\t// console.log(key)\r\n\t\t\t\t})\r\n\t\t\t\tcolumnsName['id'] = dataKeys[i]\r\n\t\t\t\tif (columnsName['district']) {\r\n\t\t\t\t\t// pass\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnsName['district'] = 'none'\r\n\t\t\t\t}\r\n\t\t\t\tif (columnsName['polling_station']) {\r\n\t\t\t\t\t// pass\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcolumnsName['polling_station'] = 'none'\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// console.log(columnsName)\r\n\t\t\t\tdataRows[i] = columnsName\r\n\t\t\t})\r\n\t\t\tthis.setState({data: dataRows})\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tsave_role(id, key, newRole) {\r\n\t\tlet rootRef = firebase.firestore().collection('users').doc(`${id}`)\r\n\t\t\t.update({\r\n\t\t\t\t[key]: newRole\r\n\t\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log('asdfsaf',this.state.data)\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<MaterialTable columns={this.state.columns}\r\n\t\t\t\t               data={this.state.data} save_role={this.save_role}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nexport default App;\r\n","import React, {Component, useEffect, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\n\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst Dashboard = () => {\r\n\tconst [userData, setUserData] = useState(null)\r\n\tconst [columns, setColumns] = useState(null)\r\n\tconst [districtLookup, setDisLookup] = useState(null)\r\n\tconst [ready, setReady] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n\r\n\t\t// Get columns data\r\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\t\tsetColumns(data.mainAdminTable)\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\r\n\t\t// Get users data\r\n\t\tlet users = []\r\n\t\tlet disLookup = {}\r\n\t\tlet usersRef = firebase.firestore().collection('users')\r\n\t\tusersRef.get().then(function (querySnapshot) {\r\n\t\t\tquerySnapshot.forEach(doc => {\r\n\t\t\t\tlet data = {id: doc.id, ...doc.data()}\r\n\t\t\t\tif (!data.district) {\r\n\t\t\t\t\tdata['district'] = 'none'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdisLookup[doc.data().district] = doc.data().district\r\n\t\t\t\t}\r\n\t\t\t\tif (!data.polling_station) {\r\n\t\t\t\t\tdata['polling_station'] = 'none'\r\n\t\t\t\t}\r\n\t\t\t\tusers.push(data)\r\n\t\t\t});\r\n\t\t\tconsole.log(users)\r\n\t\t\tsetUserData(users)\r\n\t\t\tsetDisLookup(disLookup)\r\n\t\t\tsetReady(true)\r\n\t\t});\r\n\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (columns && districtLookup) {\r\n\t\t\tlet col = columns.map(c => {\r\n\t\t\t\tif (c.field === 'district') {\r\n\t\t\t\t\tc.lookup = {...c.lookup, ...districtLookup}\r\n\t\t\t\t\treturn c\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn c\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\r\n\t\t\tcol.forEach((el, i) => {\r\n\t\t\t\t\tel.width = 200\r\n\t\t\t})\r\n\t\t\tconsole.log(\"DIS\", districtLookup)\r\n\t\t\tconsole.log(\"COL\", col)\r\n\t\t}\r\n\t\t// setColumns(col)\r\n\t\t// setReady(true)\r\n\t}, [columns, districtLookup])\r\n\r\n\r\n\tconst updateUserData = (id, field, value) => {\r\n\t\tlet data = [...userData]\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tif (data[i].id === id) {\r\n\t\t\t\tdata[i][field] = value\r\n\t\t\t\tsetUserData(data)\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\tready ? <div>\r\n\t\t\t<MaterialTable\r\n                title={\"Записей: \" + userData.length}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\tdata={userData}\r\n\t\t\t\toptions={{\r\n\t\t\t\t\tfiltering: true,\r\n\t\t\t\t\tpageSize: 20,\r\n                    emptyRowsWhenPaging: false,\r\n                    pageSizeOptions: [20, 50, 150],\r\n\t\t\t\t\texportButton: true,\r\n\t\t\t\t\tfixedColumns: {\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tcellEditable={{\r\n\t\t\t\t\tonCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\r\n\t\t\t\t\t\treturn firebase.firestore().collection('users').doc(rowData.id).update({[columnDef.field]: newValue})\r\n\t\t\t\t\t\t\t.then(() => updateUserData(rowData.id, columnDef.field, newValue))\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div> : null\r\n\t)\r\n\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {Component, useEffect, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\nimport Template from \"../Template\"\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\twithRouter,\r\n\tLink,\r\n\tuseRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst Tables = () => {\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [ready, setReady] = useState(false)\r\n\r\n\tlet { path, url } = useRouteMatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n        let urlString = queryString.parse(window.location.search)\r\n        console.log(urlString)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\tsetForms(data.forms)\r\n\t\t\t\tsetReady(true)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}, [])\r\n\t \r\n\r\n\treturn (\r\n        ready ? <div>\r\n            <ul>\r\n            {forms.map((el, i) => {\r\n              return ( \r\n                <li key={i}>\r\n                  <Link to={url + el.path}>{el.label}</Link>\r\n                </li>\r\n                )\r\n            })}\r\n            </ul>\r\n            <br/>\r\n            \r\n            <Switch>\r\n              <Route path={path + \"/:table\"}>\r\n                <Template />\r\n              </Route>\r\n            </Switch>\r\n            </div> : null\r\n\t);\r\n}\r\n\r\nexport default Tables;","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from \"material-table\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { withRouter, useParams, Redirect } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport {nest} from 'd3-collection'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst AnswersTable = () => {\r\n\tconst [answersData, setAnswersData] = useState(null)\r\n\tconst [filesData, setFilesData] = useState(null)\r\n\tconst [columns, setColumns] = useState(null)\r\n\tconst [formData, setFormData] = useState(null)\r\n\tconst [ready, setReady] = useState(false)\r\n\tconst [rows, setRows] = useState(null)\r\n\r\n\tlet { table } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(table)\r\n\t\t// Get columns data\r\n\t\tlet urlString = queryString.parse(window.location.search, { decode: false })\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tdata.forms.forEach(d => {\r\n\t\t\t\t\t\tif (d.path === '/' + table) {\r\n\t\t\t\t\t\t\tfetch(d.url).then(r => r.json()).then(f => {\r\n\t\t\t\t\t\t\t\tsetFormData(f)\r\n\t\t\t\t\t\t\t\t// console.log(f)\r\n\t\t\t\t\t\t\t\tcreateColumns(f.questions)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\t// Get users data\r\n\t\tconst getData = async () => {\r\n\t\t\tlet users = []\r\n\t\t\tlet data = []\r\n\t\t\tlet files = []\r\n\t\t\tlet usersRef = firebase.firestore().collection('users')\r\n\t\t\tawait usersRef.get().then(docs => {\r\n\t\t\t\tdocs.forEach(doc => users.push({id: doc.id, data: doc.data()}))\r\n\t\t\t}).then(async () => {\r\n\t\t\t\tlet rootRef = firebase.firestore().collection('responses')\r\n\t\t\t\tlet us = await users.map(async user => {\r\n\t\t\t\t\tlet userRef = rootRef.doc(user.id)\r\n\t\t\t\t\tlet answersRef = userRef.collection(\"answers\")\r\n\t\t\t\t\tawait answersRef.where(\"form_name\", \"==\", formData.main_title).get().then(querySnapshot => {\r\n\t\t\t\t\t\tquerySnapshot.forEach(snap => {\r\n\t\t\t\t\t\t\t// console.log(snap.data())\r\n\t\t\t\t\t\t\tlet d = snap.data()\r\n\t\t\t\t\t\t\tdata.push({ ...d.answers, ...user.data, date: d.date, id: snap.id })\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlet filesRef = userRef.collection(\"files\")\r\n\t\t\t\t\tawait filesRef.where(\"form_name\", \"==\", formData.main_title).get().then(querySnapshot => {\r\n\t\t\t\t\t\tquerySnapshot.forEach(snap => {\r\n\t\t\t\t\t\t\t// console.log(snap.data())\r\n\t\t\t\t\t\t\tlet d = snap.data()\r\n\t\t\t\t\t\t\tif (d.filepath) {\r\n\t\t\t\t\t\t\t\tfiles.push({ id: d.answer_id, photo_url: d.filepath })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (d.public_url) {\r\n\t\t\t\t\t\t\t\tfiles.push({ id: d.answer_id, photo_url: d.public_url })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tPromise.all(us).then(() => {\r\n\t\t\t\t\tsetAnswersData(data)\r\n\t\t\t\t\tsetFilesData(files)\r\n\t\t\t\t\tlet userKeys = Object.keys(users[0].data)\r\n\t\t\t\t\tcreateRows(data, files, userKeys)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (formData && columns) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [formData, columns])\r\n\r\n\r\n\tconst createColumns = (questions) => {\r\n\t\tlet cols = []\r\n\t\tquestions.forEach((question, i) => {\r\n\t\t\tif (question.type === 'multiradio') {\r\n\t\t\t\tquestion.subquestion.forEach(subquestion => cols.push({ title: subquestion.q, width: 200}))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcols.push({ title: question.title, width: 200})\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(cols)\r\n\t\tcols.forEach((col, i) => col['field'] = i.toString())\r\n\t\tcols.unshift({title: 'Full_name', field: 'full_name', width: 200})\r\n\t\tcols.unshift({title: 'Username', field: 'name', width: 200})\r\n\t\tcols.push({title: 'Date', field: 'date', width: 200})\r\n\t\tcols.push({title: \"Images\", field: 'image', width: 200, render: rowData => {\r\n\t\t\tif (rowData.image) {\r\n\t\t\t\treturn (\r\n\t\t\t\t<Grid container display=\"flex\" style={{flexWrap: 'inherit'}}>\r\n\t\t\t\t\t{rowData.image.map((url, i) => {\r\n\t\t\t\t\t\tlet ext = url.match(/(\\.\\w+)+(?!.*(\\w+)(\\.\\w+)+)/g)\r\n\t\t\t\t\t\tif (ext && (ext[0] === '.jpg' || ext[0] === '.png' || ext[0] === '.svg')) {\r\n\t\t\t\t\t\t\treturn <img key={i} src={url} alt={\"image\" + i} style={{width: 100, cursor: \"pointer\", paddingRight: '5px'}} onClick={() => window.open(url)} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (ext && ext[0] === '.mp4') {\r\n\t\t\t\t\t\t\treturn <button key={i} onClick={() => window.open(url)}>{\"video\" + i}</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn <button key={i} onClick={() => window.open(url)}>{\"neither image or video\" + i}</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn '[null]'\r\n\t\t\t}\r\n\t\t}})\r\n\t\tsetColumns(cols)\r\n\t}\r\n\r\n\tconst createRows = (data, files, userKeys) => {\r\n\t\t// console.log(data)\r\n\r\n\t\tlet filesObject = {}\r\n\t\tif (files.length > 0) {\r\n\t\t\tlet filesNested = nest()\r\n\t\t\t.key(function(d) { return d.id; })\r\n\t\t\t.rollup(function(v) { return v.map(f => f.photo_url)})\r\n\t\t\t.entries(files);\r\n\t\t\t// console.log(\"NESTED\", filesNested)\r\n\t\t\tfilesNested.forEach(file => {\r\n\t\t\t\tfilesObject[file.key] = file.value\r\n\t\t\t})\r\n\t\t}\r\n\t\t// console.log(filesObject)\r\n\r\n\t\tlet rows = []\r\n\t\tdata.forEach(d => {\r\n\t\t\tlet row = []\r\n\t\t\tformData.questions.forEach((question, ind) => {\r\n\t\t\t\tif (question.type === 'multiradio') {\r\n\t\t\t\t\tlet len = question.subquestion.length\r\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\tif (d[ind] && d[ind][i]) {\r\n\t\t\t\t\t\t\trow.push(question.answer[d[ind][i]])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\trow.push('-')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (d[ind]) {\r\n\t\t\t\t\t\trow.push(d[ind])\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\trow.push('-')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// console.log(row)\r\n\t\t\tlet tmp = {}\r\n\t\t\tObject.values(columns).forEach(column => {\r\n\t\t\t\ttmp[column.field] = row[column.field]\r\n\t\t\t})\r\n\t\t\t// console.log(userKeys)\r\n\t\t\tuserKeys.forEach(key => {\r\n\t\t\t\ttmp[key] = d[key]\r\n\t\t\t\tif (key === 'date') {\r\n\t\t\t\t\ttmp[key] = formatDate(d[key])\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\ttmp['image'] = filesObject[d.id]\r\n\t\t\trows.push(tmp)\r\n\t\t})\r\n\t\tsetRows(rows)\r\n\t\tsetReady(true)\r\n\t}\r\n\r\n\tconst formatDate = (d) => {\r\n\t\tlet date = new Date({...d}.seconds * 1000)\r\n\t\tlet formatedDate = [\r\n\t\t\t\t\tdate.getDate().toString().length < 2 ? '0' + date.getDate() : date.getDate(),\r\n\t\t\t\t\t(date.getMonth()+1).toString().length < 2 ? '0' + (date.getMonth()+1) : (date.getMonth()+1),\r\n\t\t\t\t\tdate.getFullYear()].join('/')+' '+\r\n\t\t\t\t\t[date.getHours().toString().length < 2 ? '0' + date.getHours() : date.getHours(),\r\n\t\t\t\t\t\tdate.getMinutes().toString().length < 2 ? '0' + date.getMinutes() : date.getMinutes(),\r\n\t\t\t\t\t\tdate.getSeconds().toString().length < 2 ? '0' + date.getSeconds() : date.getSeconds()].join(':').toString();\r\n\t\treturn formatedDate\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\tready ? <div>\r\n\t\t    <MaterialTable\r\n\t\t\t\ttitle={formData.main_title + \" (Записей: \" + rows.length + \")\"}\r\n\t\t    columns={columns}\r\n\t\t    data={rows}\r\n\t\t    options={{\r\n\t\t\t\tfiltering: true,\r\n\t\t\t\tpageSize: 20,\r\n\t\t\t\temptyRowsWhenPaging: false,\r\n\t\t\t\tpageSizeOptions: [20, 50, 150], \r\n\t\t\t\texportButton: true,\r\n\t\t\t\t\tfixedColumns: {\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}}\r\n\t\t    />\r\n\t\t</div> : <div style = {{\r\n      position: 'absolute',\r\n      height: '100px',\r\n      width: '100px',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginLeft: '-50px',\r\n      marginTop: '-50px',\r\n      }}>\r\n      <CircularProgress size={100} style={{color: 'grey'}}/>\r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default AnswersTable;","import React, {Component, useEffect, useState} from 'react'\r\nimport firebase from \"../../utils/firebase\";\r\nimport Template from \"../Template\"\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tSwitch,\r\n\twithRouter,\r\n\tLink,\r\n\tuseRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst Tables = () => {\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [ready, setReady] = useState(false)\r\n\r\n\tlet { path, url } = useRouteMatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetReady(false)\r\n        let urlString = queryString.parse(window.location.search)\r\n        console.log(urlString)\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(\"DATA\", data);\r\n\t\t\t\tsetForms(data.forms)\r\n\t\t\t\tsetReady(true)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}, [])\r\n\t \r\n\r\n\treturn (\r\n        ready ? <div>\r\n            <ul>\r\n            {forms.map((el, i) => {\r\n              return ( \r\n                <li key={i}>\r\n                  <Link to={url + el.path}>{el.label}</Link>\r\n                </li>\r\n                )\r\n            })}\r\n            </ul>\r\n            <br/>\r\n            \r\n            <Switch>\r\n              <Route path={path + \"/:table\"}>\r\n                <Template />\r\n              </Route>\r\n            </Switch>\r\n            </div> : null\r\n\t);\r\n}\r\n\r\nexport default Tables;","import React, { useEffect, useState } from 'react'\r\nimport MaterialTable from \"material-table\";\r\nimport firebase from \"../../utils/firebase\";\r\nimport { withRouter, useParams, Redirect } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport {nest} from 'd3-collection'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst AnswersTable = () => {\r\n\tconst [answersData, setAnswersData] = useState(null)\r\n\tconst [filesData, setFilesData] = useState(null)\r\n\tconst [columns, setColumns] = useState(null)\r\n\tconst [formData, setFormData] = useState(null)\r\n\tconst [ready, setReady] = useState(false)\r\n    const [rows, setRows] = useState(null)\r\n    const [senders, setSenders] = useState(null)\r\n    const [absentUsers, setAbsentUsers] = useState(null)\r\n\tconst [userContactData, setUserContactData] = useState(null)\r\n\tconst [role, setRole] = useState(null)\r\n\tconst [usersData, setUsersData] = useState(null)\r\n\r\n\tlet { table } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(table)\r\n\t\t// Get columns data\r\n\t\tlet urlString = queryString.parse(window.location.search, { decode: false })\r\n\t\tif (urlString.url) {\r\n\t\t\tfetch(urlString.url)\r\n\t\t\t\t.then(response => response.json())\r\n\t\t\t\t.then(data => {\r\n\t\t\t\t\tdata.forms.forEach(d => {\r\n\t\t\t\t\t\tif (d.path === '/' + table) {\r\n\t\t\t\t\t\t\tfetch(d.url).then(r => r.json()).then(f => {\r\n\t\t\t\t\t\t\t\tsetFormData(f)\r\n\t\t\t\t\t\t\t\tsetRole(d.role)\r\n\t\t\t\t\t\t\t\t// console.log(f)\r\n\t\t\t\t\t\t\t})\r\n                        }\r\n                        if (d.path === '/contacts') {\r\n                            fetch(d.url).then(r => r.json()).then(f => {\r\n\t\t\t\t\t\t\t\tcreateColumns(f.questions)\r\n\t\t\t\t\t\t\t})\r\n                        }\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"ERROR: no url detected\")\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\t// Get users data\r\n\t\tconst getData = async () => {\r\n\t\t\tlet users = []\r\n\t\t\tlet usersObject = {}\r\n            let usersId = []\r\n            let sendersId = []\r\n\t\t\tlet usersRef = firebase.firestore().collection('users')\r\n\t\t\tawait usersRef.get().then(docs => {\r\n                docs.forEach(doc => {\r\n\t\t\t\t\t// console.log(doc.data())\r\n\t\t\t\t\t// console.log(role)\r\n\t\t\t\t\t// if (doc.data().role === role || role === 'all') {\r\n\t\t\t\t\t// \t// usersId.push(doc.id)\r\n\t\t\t\t\t// \t// users.push({id: doc.id, ...doc.data()})\r\n\t\t\t\t\t// \tconsole.log(\"ROLE\", doc.id, doc.data().role)\r\n\t\t\t\t\t// }\r\n\t\t\t\t\tusersId.push(doc.id)\r\n\t\t\t\t\tusers.push({id: doc.id, ...doc.data()})\r\n\t\t\t\t\tusersObject[doc.id] = doc.data()\r\n                })\r\n\t\t\t}).then(async () => {\r\n\t\t\t\tlet rootRef = firebase.firestore().collection('responses')\r\n\t\t\t\tlet us = await users.map(async user => {\r\n\t\t\t\t\tlet userRef = rootRef.doc(user.id)\r\n\t\t\t\t\tlet answersRef = userRef.collection(\"answers\")\r\n\t\t\t\t\tawait answersRef.where(\"identifier\", \"==\", formData.identifier).get().then(querySnapshot => {\r\n\t\t\t\t\t\tquerySnapshot.forEach(snap => {\r\n\t\t\t\t\t\t\t// console.log(snap.data())\r\n                            sendersId.push(user.id)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\tPromise.all(us).then(() => {\r\n                    let uniqueIds = [...new Set(sendersId)];\r\n                    setSenders(uniqueIds)\r\n                    let absents = usersId.filter( ( el ) => !uniqueIds.includes( el ) );\r\n                    // console.log(\"UNIQUE\", uniqueIds)\r\n                    // console.log(\"ABSENTS\", absents)\r\n                    console.log(\"nonunique replies\", sendersId.length)\r\n                    console.log(\"unique replies: \", uniqueIds.length)\r\n                    console.log(\"haven't replied: \", absents.length)\r\n\t\t\t\t\tsetAbsentUsers(absents)\r\n\t\t\t\t\tconsole.log(usersObject)\r\n\t\t\t\t\tsetUsersData(usersObject)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\r\n        if (formData && role) {\r\n            getData()\r\n        }\r\n        \r\n    }, [formData, role])\r\n\r\n\r\n    useEffect(() => {\r\n        const makeRows = async () => {\r\n            let rootRef = firebase.firestore().collection('responses')\r\n            const contactData = []\r\n            let rows = await absentUsers.map( async user => {\r\n                // console.log(user)\r\n                let userRef = rootRef.doc(user)\r\n                let answersRef = userRef.collection(\"answers\")\r\n                await answersRef.where(\"form_name\", \"==\", \"Контактные данные\").limit(1).get().then(async querySnapshot => {\r\n                    await querySnapshot.forEach(async snap => {\r\n                        // console.log(snap.data())\r\n                        // contactData =  snap.data()\r\n                        contactData.push({id: user, ...snap.data().answers})\r\n                    })\r\n                })\r\n            })\r\n            Promise.all(rows).then(() => {\r\n                console.log(contactData)\r\n                setUserContactData(contactData)\r\n\t\t\t\t// setReady(true)\r\n\t\t\t\tcreateRow(contactData)\r\n            })\r\n            \r\n        }\r\n\r\n        if (absentUsers && usersData && role) {\r\n            makeRows()\r\n        }\r\n    }, [absentUsers, usersData, role])\r\n    \r\n\r\n\r\n\tconst createColumns = (questions) => {\r\n\t\tlet cols = []\r\n\t\tquestions.forEach((question, i) => {\r\n\t\t\tif (question.type === 'multiradio') {\r\n\t\t\t\tquestion.subquestion.forEach(subquestion => cols.push({ title: subquestion.q, width: 200}))\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcols.push({ title: question.title, width: 200})\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(cols)\r\n\t\tcols.forEach((col, i) => col['field'] = i.toString())\r\n\t\t\r\n\t\t// cols.unshift({title: 'Full_name', field: 'full_name', width: 200})\r\n\t\tcols.unshift({title: 'Role', field: 'role', width: 200})\r\n        \r\n\t\t// cols.unshift({title: 'Full_name', field: 'full_name', width: 200})\r\n\t\t// cols.unshift({title: 'Username', field: 'name', width: 200})\r\n\t\t// cols.push({title: 'Date', field: 'date', width: 200})\r\n\t\t// cols.push({title: \"Images\", field: 'image', width: 200, render: rowData => {\r\n\t\t// \tif (rowData.image) {\r\n\t\t// \t\treturn (\r\n\t\t// \t\t<Grid container display=\"flex\" style={{flexWrap: 'inherit'}}>\r\n\t\t// \t\t\t{rowData.image.map((url, i) => {\r\n\t\t// \t\t\t\tlet ext = url.match(/(\\.\\w+)+(?!.*(\\w+)(\\.\\w+)+)/g)\r\n\t\t// \t\t\t\tif (ext && (ext[0] === '.jpg' || ext[0] === '.png' || ext[0] === '.svg')) {\r\n\t\t// \t\t\t\t\treturn <img key={i} src={url} alt={\"image\" + i} style={{width: 100, cursor: \"pointer\", paddingRight: '5px'}} onClick={() => window.open(url)} />\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t\telse if (ext && ext[0] === '.mp4') {\r\n\t\t// \t\t\t\t\treturn <button key={i} onClick={() => window.open(url)}>{\"video\" + i}</button>\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t\telse {\r\n\t\t// \t\t\t\t\treturn <button key={i} onClick={() => window.open(url)}>{\"neither image or video\" + i}</button>\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t})}\r\n\t\t// \t\t</Grid>\r\n\t\t// \t\t)\r\n\t\t// \t}\r\n\t\t// \telse {\r\n\t\t// \t\treturn '[null]'\r\n\t\t// \t}\r\n\t\t// }})\r\n        setColumns(cols)\r\n\t}\r\n\r\n\t// const createRows = (data, files, userKeys) => {\r\n\t// \t// console.log(data)\r\n\r\n\t// \tlet filesObject = {}\r\n\t// \tif (files.length > 0) {\r\n\t// \t\tlet filesNested = nest()\r\n\t// \t\t.key(function(d) { return d.id; })\r\n\t// \t\t.rollup(function(v) { return v.map(f => f.photo_url)})\r\n\t// \t\t.entries(files);\r\n\t// \t\t// console.log(\"NESTED\", filesNested)\r\n\t// \t\tfilesNested.forEach(file => {\r\n\t// \t\t\tfilesObject[file.key] = file.value\r\n\t// \t\t})\r\n\t// \t}\r\n\t// \t// console.log(filesObject)\r\n\r\n\t// \tlet rows = []\r\n\t// \tdata.forEach(d => {\r\n\t// \t\tlet row = []\r\n\t// \t\tformData.questions.forEach((question, ind) => {\r\n\t// \t\t\tif (question.type === 'multiradio') {\r\n\t// \t\t\t\tlet len = question.subquestion.length\r\n\t// \t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t// \t\t\t\t\tif (d[ind] && d[ind][i]) {\r\n\t// \t\t\t\t\t\trow.push(question.answer[d[ind][i]])\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t\telse {\r\n\t// \t\t\t\t\t\trow.push('-')\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tif (d[ind]) {\r\n\t// \t\t\t\t\trow.push(d[ind])\r\n\t// \t\t\t\t}\r\n\t// \t\t\t\telse {\r\n\t// \t\t\t\t\trow.push('-')\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t// \t\t// console.log(row)\r\n\t// \t\tlet tmp = {}\r\n\t// \t\tObject.values(columns).forEach(column => {\r\n\t// \t\t\ttmp[column.field] = row[column.field]\r\n\t// \t\t})\r\n\t// \t\t// console.log(userKeys)\r\n\t// \t\tuserKeys.forEach(key => {\r\n\t// \t\t\ttmp[key] = d[key]\r\n\t// \t\t\tif (key === 'date') {\r\n\t// \t\t\t\ttmp[key] = formatDate(d[key])\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t// \t\ttmp['image'] = filesObject[d.id]\r\n\t// \t\trows.push(tmp)\r\n\t// \t})\r\n\t// \tsetRows(rows)\r\n\t// \tsetReady(true)\r\n\t// }\r\n\r\n\t// const formatDate = (d) => {\r\n\t// \tlet date = new Date({...d}.seconds * 1000)\r\n\t// \tlet formatedDate = [\r\n\t// \t\t\t\tdate.getDate().toString().length < 2 ? '0' + date.getDate() : date.getDate(),\r\n\t// \t\t\t\t(date.getMonth()+1).toString().length < 2 ? '0' + (date.getMonth()+1) : (date.getMonth()+1),\r\n\t// \t\t\t\tdate.getFullYear()].join('/')+' '+\r\n\t// \t\t\t\t[date.getHours().toString().length < 2 ? '0' + date.getHours() : date.getHours(),\r\n\t// \t\t\t\t\tdate.getMinutes().toString().length < 2 ? '0' + date.getMinutes() : date.getMinutes(),\r\n\t// \t\t\t\t\tdate.getSeconds().toString().length < 2 ? '0' + date.getSeconds() : date.getSeconds()].join(':').toString();\r\n\t// \treturn formatedDate\r\n\t// }\r\n\r\n\tconst createRow = (data) => {\r\n\t\tlet tmpRows = []\r\n\t\tdata.forEach(d => {\r\n\t\t\tif (d.id && usersData[d.id]) {\r\n\t\t\t\tif (usersData[d.id].role === role || role === 'all') {\r\n\t\t\t\t\tconsole.log(usersData[d.id].role)\r\n\t\t\t\t\tconsole.log(role)\r\n\t\t\t\t\ttmpRows.push({...d, ...usersData[d.id]})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetRows(tmpRows)\r\n\t\tsetReady(true)\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\tready ? <div>\r\n\t\t\t{/* <button onClick={createRow}>asd</button> */}\r\n\t\t\t<p>Форму отправили: {senders.length} человек</p>\r\n\t\t\t<p>Форму не отправили: {rows.length} человек</p>\r\n\t\t    <MaterialTable\r\n            title={formData.main_title}\r\n\t\t    columns={columns}\r\n\t\t    data={rows}\r\n\t\t    options={{\r\n\t\t\t\tfiltering: true,\r\n\t\t\t\tpageSize: 20,\r\n\t\t\t\temptyRowsWhenPaging: false,\r\n\t\t\t\tpageSizeOptions: [20, 50, 150], \r\n\t\t\t\texportButton: true,\r\n\t\t\t\t\tfixedColumns: {\r\n\t\t\t\t\t\tleft: 1,\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}}\r\n\t\t    />\r\n\t\t</div> : <div style = {{\r\n      position: 'absolute',\r\n      height: '100px',\r\n      width: '100px',\r\n      top: '50%',\r\n      left: '50%',\r\n      marginLeft: '-50px',\r\n      marginTop: '-50px',\r\n      }}>\r\n      <CircularProgress size={100} style={{color: 'grey'}}/>\r\n    </div>\r\n\t);\r\n}\r\n\r\nexport default AnswersTable;","import React, {useEffect, useState} from \"react\";\r\nimport app from \"../../utils/firebase.js\";\r\nimport {\r\n\tHashRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\twithRouter\r\n} from \"react-router-dom\";\r\nimport Tablets from \"../../Components/auth/Tables\"\r\nimport AdminTable from \"../../Components/auth/AdminTable\"\r\nimport MainAdminTable from \"../../Components/auth/MainAdminTable\"\r\nimport Dasboard from \"../../Components/auth/Dashboard\"\r\nimport TableSelector from \"../../Components/auth/TableSelector\"\r\nimport AnswersTable from '../../Components/auth/AnswersTable'\r\nimport AbsentTableSelector from '../../Components/auth/AbsentTableSelector'\r\nimport AbsentTable from '../../Components/auth/AbsentTable'\r\n\r\nconst queryString = require('query-string');\r\n\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Home</h1>\r\n\t\t\t<button onClick={() => app.auth().signOut()}>Sign out</button>\r\n\t\t\t<Router>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<nav>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/tables\"}>Формы</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/admin\"}>Таблица Атая</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/admin-role\"}>Таблица юзеров с ролями</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to={\"/absent\"}>Таблица не отправивших</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</nav>\r\n\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/tables\" component={TableSelector}/>\r\n\t\t\t\t\t\t<Route path={\"/tables/:table\"} component={AnswersTable} />\r\n\t\t\t\t\t\t<Route exact path=\"/admin\" component={AdminTable}/>\r\n\t\t\t\t\t\t<Route exact path=\"/admin-role\" component={Dasboard}/>\r\n\t\t\t\t\t\t<Route exact path=\"/absent\" component={AbsentTableSelector}/>\r\n\t\t\t\t\t\t<Route path={\"/absent/:table\"} component={AbsentTable} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { useCallback, useContext } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router\";\r\nimport app, {signInWithGoogle} from \"../../utils/firebase.js\";\r\nimport { AuthContext } from \"../../utils/Auth.js\";\r\n\r\nconst Login = ({ history }) => {\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  if (currentUser) {\r\n    return <Redirect to={\"/ElectionsMonitoringDashboard/\" + window.location.search} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n\r\n      <button onClick={signInWithGoogle}>Sign-in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withRouter(Login);\r\n","import React, {Component} from 'react'\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n\tLink,\r\n\twithRouter\r\n} from \"react-router-dom\";\r\nimport { AuthProvider } from \"./utils/Auth\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\nimport Home from \"./Components/auth/Home\";\r\nimport Login from \"./Components/auth/Login\";\r\n\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AuthProvider>\r\n\t\t\t\t<div className={'App'}>\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<PrivateRoute exact path={\"/ElectionsMonitoringDashboard/\"} component={Home}/>\r\n\t\t\t\t\t\t<Route exact path={\"/ElectionsMonitoringDashboard/login\"} component={Login}/>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t</div>\r\n\t\t\t</AuthProvider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}